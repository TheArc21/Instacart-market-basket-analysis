<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='orders+' inline='true' name='federated.1jvdhp01ik5ria1bh1cgi0done31' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='orders' name='textscan.1ghfnoa0ebpunj1c7bueg1vkkil1'>
            <connection class='textscan' directory='D:/UTD/Sem2/Data Viz/Assignment/5/instacart-market-basket-analysis/Datasource' filename='orders.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1ghfnoa0ebpunj1c7bueg1vkkil1' name='aisles.csv' table='[aisles#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='aisle_id' ordinal='0' />
            <column datatype='string' name='aisle' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1ghfnoa0ebpunj1c7bueg1vkkil1' name='orders.csv' table='[orders#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='order_id' ordinal='0' />
              <column datatype='integer' name='user_id' ordinal='1' />
              <column datatype='string' name='eval_set' ordinal='2' />
              <column datatype='integer' name='order_number' ordinal='3' />
              <column datatype='integer' name='order_dow' ordinal='4' />
              <column datatype='integer' name='order_hour_of_day' ordinal='5' />
              <column datatype='real' name='days_since_prior_order' ordinal='6' />
            </columns>
          </relation>
          <relation all='true' name='order_products__prior.csv+' type='union'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='order_id' />
              <column datatype='integer' name='product_id' />
              <column datatype='integer' name='add_to_cart_order' />
              <column datatype='integer' name='reordered' />
              <column datatype='string' name='Table Name' />
            </columns>
            <relation connection='textscan.1ghfnoa0ebpunj1c7bueg1vkkil1' name='order_products__prior.csv' table='[order_products__prior#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                <column datatype='integer' name='order_id' ordinal='0' />
                <column datatype='integer' name='product_id' ordinal='1' />
                <column datatype='integer' name='add_to_cart_order' ordinal='2' />
                <column datatype='integer' name='reordered' ordinal='3' />
              </columns>
            </relation>
            <relation connection='textscan.1ghfnoa0ebpunj1c7bueg1vkkil1' name='order_products__train.csv' table='[order_products__train#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                <column datatype='integer' name='order_id' ordinal='0' />
                <column datatype='integer' name='product_id' ordinal='1' />
                <column datatype='integer' name='add_to_cart_order' ordinal='2' />
                <column datatype='integer' name='reordered' ordinal='3' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1ghfnoa0ebpunj1c7bueg1vkkil1' name='products.csv' table='[products#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='product_id' ordinal='0' />
              <column datatype='string' name='product_name' ordinal='1' />
              <column datatype='integer' name='aisle_id' ordinal='2' />
              <column datatype='integer' name='department_id' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.1ghfnoa0ebpunj1c7bueg1vkkil1' name='aisles.csv' table='[aisles#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='aisle_id' ordinal='0' />
              <column datatype='string' name='aisle' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.1ghfnoa0ebpunj1c7bueg1vkkil1' name='departments.csv' table='[departments#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='department_id' ordinal='0' />
              <column datatype='string' name='department' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Table Name]' value='[order_products__prior.csv+].[Table Name]' />
          <map key='[add_to_cart_order]' value='[order_products__prior.csv+].[add_to_cart_order]' />
          <map key='[aisle]' value='[aisles.csv].[aisle]' />
          <map key='[aisle_id (aisles.csv)]' value='[aisles.csv].[aisle_id]' />
          <map key='[aisle_id]' value='[products.csv].[aisle_id]' />
          <map key='[days_since_prior_order]' value='[orders.csv].[days_since_prior_order]' />
          <map key='[department]' value='[departments.csv].[department]' />
          <map key='[department_id (departments.csv)]' value='[departments.csv].[department_id]' />
          <map key='[department_id]' value='[products.csv].[department_id]' />
          <map key='[eval_set]' value='[orders.csv].[eval_set]' />
          <map key='[order_dow]' value='[orders.csv].[order_dow]' />
          <map key='[order_hour_of_day]' value='[orders.csv].[order_hour_of_day]' />
          <map key='[order_id (order_products__prior.csv+)]' value='[order_products__prior.csv+].[order_id]' />
          <map key='[order_id]' value='[orders.csv].[order_id]' />
          <map key='[order_number]' value='[orders.csv].[order_number]' />
          <map key='[product_id (products.csv)]' value='[products.csv].[product_id]' />
          <map key='[product_id]' value='[order_products__prior.csv+].[product_id]' />
          <map key='[product_name]' value='[products.csv].[product_name]' />
          <map key='[reordered]' value='[order_products__prior.csv+].[reordered]' />
          <map key='[user_id]' value='[orders.csv].[user_id]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[order_products__prior.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[products.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[aisles.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[departments.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[order_id]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>order_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[orders.csv_27573D3D4F614FE9835144F6593D6CCC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>user_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[user_id]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>user_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[orders.csv_27573D3D4F614FE9835144F6593D6CCC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eval_set</remote-name>
            <remote-type>129</remote-type>
            <local-name>[eval_set]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>eval_set</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[orders.csv_27573D3D4F614FE9835144F6593D6CCC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[order_number]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>order_number</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[orders.csv_27573D3D4F614FE9835144F6593D6CCC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_dow</remote-name>
            <remote-type>20</remote-type>
            <local-name>[order_dow]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>order_dow</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[orders.csv_27573D3D4F614FE9835144F6593D6CCC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_hour_of_day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[order_hour_of_day]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>order_hour_of_day</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[orders.csv_27573D3D4F614FE9835144F6593D6CCC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_since_prior_order</remote-name>
            <remote-type>5</remote-type>
            <local-name>[days_since_prior_order]</local-name>
            <parent-name>[orders.csv]</parent-name>
            <remote-alias>days_since_prior_order</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[orders.csv_27573D3D4F614FE9835144F6593D6CCC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[order_id (order_products__prior.csv+)]</local-name>
            <parent-name>[order_products__prior.csv+]</parent-name>
            <remote-alias>order_id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[product_id]</local-name>
            <parent-name>[order_products__prior.csv+]</parent-name>
            <remote-alias>product_id</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>add_to_cart_order</remote-name>
            <remote-type>20</remote-type>
            <local-name>[add_to_cart_order]</local-name>
            <parent-name>[order_products__prior.csv+]</parent-name>
            <remote-alias>add_to_cart_order</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reordered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[reordered]</local-name>
            <parent-name>[order_products__prior.csv+]</parent-name>
            <remote-alias>reordered</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[order_products__prior.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[product_id (products.csv)]</local-name>
            <parent-name>[products.csv]</parent-name>
            <remote-alias>product_id</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[products.csv_86C6B5E265AB41C98EDFB93EB5DBF6AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_name]</local-name>
            <parent-name>[products.csv]</parent-name>
            <remote-alias>product_name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[products.csv_86C6B5E265AB41C98EDFB93EB5DBF6AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aisle_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[aisle_id]</local-name>
            <parent-name>[products.csv]</parent-name>
            <remote-alias>aisle_id</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[products.csv_86C6B5E265AB41C98EDFB93EB5DBF6AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>department_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[department_id]</local-name>
            <parent-name>[products.csv]</parent-name>
            <remote-alias>department_id</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[products.csv_86C6B5E265AB41C98EDFB93EB5DBF6AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aisle_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[aisle_id (aisles.csv)]</local-name>
            <parent-name>[aisles.csv]</parent-name>
            <remote-alias>aisle_id</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aisles.csv_55871F268FE1467D93C979E5CAF19142]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aisle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[aisle]</local-name>
            <parent-name>[aisles.csv]</parent-name>
            <remote-alias>aisle</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aisles.csv_55871F268FE1467D93C979E5CAF19142]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>department_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[department_id (departments.csv)]</local-name>
            <parent-name>[departments.csv]</parent-name>
            <remote-alias>department_id</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[departments.csv_0DED5794A27346BD807EC82CDDCE479A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>department</remote-name>
            <remote-type>129</remote-type>
            <local-name>[department]</local-name>
            <parent-name>[departments.csv]</parent-name>
            <remote-alias>department</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[departments.csv_0DED5794A27346BD807EC82CDDCE479A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Index &lt;= 10' datatype='boolean' name='[Calculation_158189003742556162]' role='measure' type='nominal'>
        <calculation class='tableau' formula='INDEX()&lt;=10'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Number of Items per Order' datatype='integer' name='[Calculation_158189003743723523]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [order_id (order_products__prior.csv+)]:COUNT([product_id])}' />
      </column>
      <column caption='Rank' datatype='integer' name='[Calculation_158189003747479556]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_DENSE(COUNT([__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Hour Rank' datatype='integer' name='[Calculation_158189003765882887]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_DENSE(COUNT([__tableau_internal_object_id__].[orders.csv_27573D3D4F614FE9835144F6593D6CCC]))'>
          <table-calc ordering-field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[order_hour_of_day]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Percentage of Total Orders' datatype='real' name='[Calculation_158189003816521736]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([order_id (order_products__prior.csv+)])/SUM({ FIXED [product_name]:COUNT([order_id (order_products__prior.csv+)])})' />
      </column>
      <column caption='Rank - Percentage of Total Orders' datatype='integer' name='[Calculation_158189003817390089]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_DENSE([Calculation_158189003816521736])'>
          <table-calc ordering-field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[order_hour_of_day]' ordering-type='Field' />
        </calculation>
      </column>
      <column aggregation='None' datatype='integer' name='[Days Since Prior Order (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[days_since_prior_order]' peg='0' size='1' />
      </column>
      <column aggregation='None' datatype='integer' name='[Number of Items per Order (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Calculation_158189003743723523]' peg='0' size='1' />
      </column>
      <column datatype='string' name='[Order Dow &amp; Order Hour Of Day (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Order Dow &amp; Order Hour Of Day]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Early Birds&quot;'>
            <value>(0,6)</value>
            <value>(0,7)</value>
            <value>(0,8)</value>
            <value>(1,6)</value>
            <value>(1,7)</value>
            <value>(1,8)</value>
            <value>(2,6)</value>
            <value>(2,7)</value>
            <value>(2,8)</value>
            <value>(3,6)</value>
            <value>(3,7)</value>
            <value>(3,8)</value>
            <value>(4,6)</value>
            <value>(4,7)</value>
            <value>(4,8)</value>
            <value>(5,6)</value>
            <value>(5,7)</value>
            <value>(5,8)</value>
            <value>(6,6)</value>
            <value>(6,7)</value>
            <value>(6,8)</value>
          </bin>
          <bin default-name='false' value='&quot;Evening Hours&quot;'>
            <value>(0,16)</value>
            <value>(0,17)</value>
            <value>(0,18)</value>
            <value>(1,16)</value>
            <value>(1,17)</value>
            <value>(1,18)</value>
            <value>(2,16)</value>
            <value>(2,17)</value>
            <value>(2,18)</value>
            <value>(3,16)</value>
            <value>(3,17)</value>
            <value>(3,18)</value>
            <value>(4,16)</value>
            <value>(4,17)</value>
            <value>(4,18)</value>
            <value>(5,16)</value>
            <value>(5,17)</value>
            <value>(5,18)</value>
            <value>(6,16)</value>
            <value>(6,17)</value>
            <value>(6,18)</value>
          </bin>
          <bin default-name='false' value='&quot;Friday Rush Hours&quot;'>
            <value>(6,13)</value>
            <value>(6,14)</value>
            <value>(6,15)</value>
          </bin>
          <bin default-name='false' value='&quot;Late Night Hours&quot;'>
            <value>(0,21)</value>
            <value>(0,22)</value>
            <value>(0,23)</value>
            <value>(1,21)</value>
            <value>(1,22)</value>
            <value>(1,23)</value>
            <value>(2,21)</value>
            <value>(2,22)</value>
            <value>(2,23)</value>
            <value>(3,21)</value>
            <value>(3,22)</value>
            <value>(3,23)</value>
            <value>(4,21)</value>
            <value>(4,22)</value>
            <value>(4,23)</value>
            <value>(5,21)</value>
            <value>(5,22)</value>
            <value>(5,23)</value>
            <value>(6,21)</value>
            <value>(6,22)</value>
            <value>(6,23)</value>
          </bin>
          <bin default-name='false' value='&quot;Monday-Thursday Rush Hours&quot;'>
            <value>(2,10)</value>
            <value>(2,11)</value>
            <value>(2,15)</value>
            <value>(3,10)</value>
            <value>(3,11)</value>
            <value>(3,15)</value>
            <value>(4,10)</value>
            <value>(4,11)</value>
            <value>(4,15)</value>
            <value>(5,10)</value>
            <value>(5,11)</value>
            <value>(5,15)</value>
          </bin>
          <bin default-name='false' value='&quot;Weekend Busiest Hours&quot;'>
            <value>(0,13)</value>
            <value>(0,14)</value>
            <value>(0,15)</value>
            <value>(1,9)</value>
            <value>(1,10)</value>
            <value>(1,11)</value>
          </bin>
        </calculation>
      </column>
      <column aggregation='None' datatype='integer' name='[Order Dow (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[order_dow]' peg='0' size='1' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='aisles.csv' datatype='table' name='[__tableau_internal_object_id__].[aisles.csv_55871F268FE1467D93C979E5CAF19142]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='departments.csv' datatype='table' name='[__tableau_internal_object_id__].[departments.csv_0DED5794A27346BD807EC82CDDCE479A]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='order_products.csv' datatype='table' name='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='orders.csv' datatype='table' name='[__tableau_internal_object_id__].[orders.csv_27573D3D4F614FE9835144F6593D6CCC]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='products.csv' datatype='table' name='[__tableau_internal_object_id__].[products.csv_86C6B5E265AB41C98EDFB93EB5DBF6AB]' role='measure' type='quantitative' />
      <column caption='Add To Cart Order' datatype='integer' name='[add_to_cart_order]' role='measure' type='quantitative' />
      <column caption='Aisle' datatype='string' name='[aisle]' role='dimension' type='nominal' />
      <column caption='Aisle Id (Aisles.Csv)' datatype='integer' name='[aisle_id (aisles.csv)]' role='dimension' type='ordinal' />
      <column caption='Aisle Id' datatype='integer' name='[aisle_id]' role='dimension' type='ordinal' />
      <column caption='Days Since Prior Order' datatype='real' name='[days_since_prior_order]' role='measure' type='quantitative' />
      <column caption='Department' datatype='string' name='[department]' role='dimension' type='nominal' />
      <column caption='Department Id (Departments.Csv)' datatype='integer' name='[department_id (departments.csv)]' role='dimension' type='ordinal' />
      <column caption='Department Id' datatype='integer' name='[department_id]' role='dimension' type='ordinal' />
      <column caption='Eval Set' datatype='string' name='[eval_set]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Order Dow' datatype='integer' name='[order_dow]' role='dimension' type='ordinal' />
      <column caption='Order Hour Of Day' datatype='integer' name='[order_hour_of_day]' role='dimension' type='ordinal' />
      <column caption='Order Id' datatype='integer' name='[order_id]' role='dimension' type='ordinal' />
      <column caption='Order Number' datatype='integer' name='[order_number]' role='dimension' type='ordinal' />
      <column caption='Product Id (Products.Csv)' datatype='integer' name='[product_id (products.csv)]' role='dimension' type='ordinal' />
      <column caption='Product Id' datatype='integer' name='[product_id]' role='dimension' type='ordinal' />
      <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
      <column caption='Reordered' datatype='integer' name='[reordered]' role='measure' type='quantitative' />
      <column caption='User Id' datatype='integer' name='[user_id]' role='dimension' type='ordinal' />
      <column-instance column='[aisle]' derivation='None' name='[none:aisle:nk]' pivot='key' type='nominal' />
      <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
      <group auto-hidden='true' hidden='true' name='[Order Dow &amp; Order Hour Of Day]' name-style='unqualified'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[order_dow]' />
          <groupfilter function='level-members' level='[order_hour_of_day]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Order Dow &amp; Order Hour Of Day (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Weekend Busiest Hours&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Late Night Hours&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Friday Rush Hours&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Evening Hours&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Monday-Thursday Rush Hours&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Early Birds&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:product_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;100 Calorie  Per Bag Popcorn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Apple Juice&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Birthday Cake Light Ice Cream&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Butternut Squash&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chocolate Chip Cookie Dough Ice Cream&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cream Cheese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Extra Ginger Brew Jamaican Style Ginger Beer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Garlic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grated Parmesan Cheese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Honeycrisp Apples&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Large Yellow Flesh Nectarine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Medium Navel Orange&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Naturals Chicken Nuggets&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Baby Bella Mushrooms&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Blueberries&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Chicken Bone Broth&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Egg Whites&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Grade A Free Range Large Brown Eggs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Italian Salad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Low Sodium Chicken Cooking Stock&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Orange Juice&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Red Onion&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Shredded Mild Cheddar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Sunday Bacon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Whipped Naturally Buttery Spread&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Organic Yellow Squash&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Parsley, Italian (Flat), New England Grown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pure Coconut Water&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reduced Fat Milk&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seedless Cucumbers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Soda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Strawberry Preserves&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tomato Ketchup&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uncured Black Forest Ham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vine Ripe Tomatoes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yellow Grape Tomatoes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1\% Low Fat Milk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ALMONDBREEZE UNSWEETENED&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Banana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Boomchickapop Sea Salt Popcorn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Celery Sticks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cola&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Diet Ginger Ale All Natural Soda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dry Roasted Almonds&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Extra Fancy Unsalted Mixed Nuts&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fresh Cauliflower&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gold Potato&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hass Avocado&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kidz All Natural Baked Chicken Nuggets&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Macaroni Shells &amp; White Cheddar Cheese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Natural Artesian Water&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic 1\% Low Fat Milk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Beans &amp; Rice Cheddar Cheese Burrito&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Butterhead (Boston, Butter, Bibb) Lettuce&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Crushed Fire Roasted Tomatoes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Fuji Apple&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Hass Avocado&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Large Grade AA Omega-3 Eggs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Mixed Vegetables&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Raw Unfiltered Apple Cider Vinegar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Romaine Leaf&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Spring Mix&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Unsweetened Almond Milk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Whole Peeled Tomatoes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Original Rotisserie Chicken&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plantain Chips&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Red Onion&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Salted Butter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shredded Sharp Cheddar Cheese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sparkling Water Berry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweet Potatoes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Total 2\% Greek Strained Yogurt with Cherry 5.3 oz&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vanilla Almond Breeze&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Whole Milk Plain Yogurt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2\% Reduced Fat Organic Milk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Americone DreamÂ® Ice Cream&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beef Franks&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bunched Cilantro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cheese Pizza&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Corn Chips&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Crunchy Oats &apos;n Honey Granola Bars&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Electrolyte Enhanced Water&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fridge Pack Cola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grape Tomatoes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Honey Greek Yogurt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Large Burrito Flour Tortillas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marinara Pasta Sauce&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Natural Free &amp; Clear Dish Liquid&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nutri Grain Bars Multi Pack&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Apple Juice&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Bell Pepper&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Cauliflower&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Diced Tomatoes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Garnet Sweet Potato (Yam)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Hot House Tomato&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Lemonade&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Nectarine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Red Delicious Apple&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Salted Butter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Strawberry Fruit Spread&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Vanilla Extract&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Organic Whole Wheat Fusilli&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oven Roasted Turkey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pears&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pretzel Crisps Original Deli Style Pretzel Crackers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Red Raspberries&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sea Salt &amp; Vinegar Potato Chips&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sliced White Mushrooms&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spinach Peas &amp; Pear Stage 2 Baby Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thin &amp; Light Tortilla Chips&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Total 2\% with Strawberry Lowfat Greek Strained Yogurt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanilla Skyr Nonfat Yogurt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Whole Wheat Bread&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Milk Chocolate Almonds&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Original Beef Jerky&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;100\% Recycled Paper Towels&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Authentic French Brioche Hamburger Buns&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Blackberry Cucumber Sparkling Water&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cane Sugar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chopped Walnuts&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Crescent Rolls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fat Free Milk&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ginger Ale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Green Peas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ice Cream Sandwiches Vanilla&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Light Brown Sugar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mild Salsa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;No Salt Added Black Beans&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Organic Baby Kale Mix&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Organic Braeburn Apple&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Organic Chicken Thighs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Organic Extra Large Grade AA Brown Eggs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Organic Greek Plain Nonfat Yogurt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Organic Kiwi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Organic Mango&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Organic Penne Rigate&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Organic Reduced Fat 2\% Milk&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Organic Sliced White Mushrooms&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Organic Tomato Cluster&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Organic Whole Cashews&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Original Hummus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Penne Rigate \#41 Pasta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Purity Farms Ghee Clarified Butter&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roasted Red Pepper Hummus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seven Grain Crispy Tenders&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sourdough Bread&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Super Soft Taco Flour Tortillas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tommy/Kent/Keitt/Haden Mango&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uncured Slow Cooked Ham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Watermelon Chunks&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;YoBaby Peach Pear Yogurt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;100\% Pure Pumpkin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Applewood Smoked Bacon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Black Beans&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cage Free Brown Eggs-Large, Grade A&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chocolate Chip Cookies&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cream Cheese Spread&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Extra Virgin Olive Oil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Garlic &amp; Fine Herbs Gournay Cheese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Green Beans&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Honeydew Melon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lemon Hummus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michigan Organic Kale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Naturals Savory Turkey Breakfast Sausage&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic Baby Broccoli&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic Blueberry Waffles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic Chicken Broth&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic English Cucumber&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic Grade A Large Brown Eggs&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic Jalapeno Pepper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic Low Sodium Vegetable Broth&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic Original Almond Milk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic Red Potato&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic Shredded Mozzarella&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic Thompson Seedless Raisins&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic Whipping Cream&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Organic Zucchini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peach Pear Flavored Sparkling Water&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pure Irish Butter&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Reduced Fat Milk 100\% Lactose Free&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seedless Red Grapes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Soft Pretzel Burger Buns&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Strawberry Rhubarb Yoghurt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tomato Paste&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uncured Genoa Salami&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vitamin D Organic Whole Milk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yellow Onions&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;85\% Lean Ground Beef&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Apple Cider Vinegar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Berry Medley&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bunny Pasta with Yummy Cheese Macaroni &amp; Cheese&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cherubs Heavenly Salad Tomatoes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Corn Tortillas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Emmentaler Swiss Slices&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frozen Broccoli Florets&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grape White/Green Seedless&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Honey Nut Cheerios&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Large Grapefruit&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marinara Sauce&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Natural Premium Coconut Water&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic AppleApple&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic Black Beans&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic Celery Hearts&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic Dijon Mustard&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic Ginger Root&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic Hothouse Cucumbers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic Lite Coconut Milk&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic No Salt Added Diced Tomatoes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic Red Grapes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic Sea Salt Roasted Seaweed Snacks&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic Strawberry Smoothie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic Vegetable Broth&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Organic Yams&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oven Roasted Turkey Breast&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Provolone&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Red Seedless Grapes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sea Salt Caramel Gelato&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Small Hass Avocado&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spring Water&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thin Crust Pepperoni Pizza&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Total Greek Strained Yogurt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vanilla Skyr Style Yogurt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wild Berry Smoothie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Almond Breeze Original Almond Milk&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bag of Organic Bananas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Boneless Skinless Chicken Breasts&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cauliflower Florets&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Club Soda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dha Omega 3 Reduced Fat 2\% Milk&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Florida Orange Juice With Calcium &amp; Vitamin D&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gluten Free Whole Grain Bread&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Half &amp; Half&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kale Greens&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lowfat Vanilla Yogurt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mint Chip&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Orange Sparkling Water&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Bartlett Pear&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Bunch Beets&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Creamy Peanut Butter&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Frozen Mango Chunks&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Green Seedless Grapes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Large Grade A Brown Eggs&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Milk Reduced Fat, 2\% Milkfat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Raspberries&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Romaine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Spaghetti Squash&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Uncured Sliced Black Forest Ham&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Organic Whole Milk&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Original Restaurant Style Tortilla Chips&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plain Greek Yogurt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Real Mayonnaise&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Root Beer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shredded Mozzarella&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sparkling Natural Mineral Water&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweet Onions&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Total 2\% All Natural Low Fat 2\% Milkfat Greek Strained Yogurt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Unsweetened Original Almond Breeze Almond Milk&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Whole Almonds&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1\% Lowfat Milk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Almonds &amp; Sea Salt in Dark Chocolate&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Apples&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bartlett Pears&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Beer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broccoli &amp; Cheddar Bake Meal Bowl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cereal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Colby Cheese Sticks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Distilled Water&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fresh Cut Golden Sweet Whole Kernel Corn&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grade A Large Eggs Cage Free Omega 3&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hass Avocados&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kiwi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mandarin Oranges&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Natural Artisan Water&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic 2\% Reduced Fat Milk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic Beef Broth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic Butternut Squash&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic Cucumber&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic Gala Apples&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic Heavy Whipping Cream&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic Large Green Asparagus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic Muenster Cheese Slices&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic Red Bell Pepper&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic Romaine Lettuce&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic Spring Mix Salad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic Unsweetened Vanilla Almond Milk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organic Whole Strawberries&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Original Semisoft Cheese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poblano Pepper&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Red Peppers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salted Tub of Butter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sinfully Sweet Campari Tomatoes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sparkling Water Grapefruit&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Synergy Organic Kombucha Gingerberry&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Total 2\% Lowfat Greek Strained Yogurt With Blueberry&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vanilla Almond Breeze Almond Milk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Whole Milk Ricotta Cheese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Air Chilled Organic Boneless Skinless Chicken Breasts&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Baby Seedless Cucumbers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Blueberry Yoghurt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carrots&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clementines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cucumber Kirby&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Flaky Biscuits&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gluten Free Dark Chocolate Chunk Chewy with a Crunch Granola Bars&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ground Turkey Breast&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italian Sparkling Mineral Water&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Limes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mini Original Babybel Cheese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Orange Calcium &amp; Vitamin D Pulp Free&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Organic Bagged Carrots&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Organic Broccoli Florets&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Organic Coconut Milk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Organic Free Range Low Sodium Chicken Broth&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Organic Green Lentils&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Organic Large Brown Grade AA Cage Free Eggs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Organic Mexican Blend Finely Shredded Cheese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Organic Quick Oats&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Organic Roasted Turkey Breast&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Organic Snipped Green Beans&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Organic Turkey Bacon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Organic Whole Kernel Sweet Corn No Salt Added&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Original Popcorn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pita Chips Simply Naked&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Raspberry Preserves&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romaine Hearts&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shredded Hash Browns&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sparkling Lemon Water&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sweet Baguette&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sweet Kale Salad Mix&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Total 0\% Raspberry Yogurt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Unsweetened Almondmilk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;White Onion&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yukon Gold Potatoes 5lb Bag&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;90\% Lean Ground Beef&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Apple Cinnamon GoGo Squeez&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bicolor Sweet Corn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bunny-Luv Fresh Organic Carrots&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chicken &amp; Maple Breakfast Sausage&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crackers Cheddar Bunnies Snack Packs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;English Seedless Cucumber&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frozen Organic Wild Blueberries&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grapefruit Sparkling Water&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Honey Yoghurt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Large Greenhouse Tomato&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mediterranean Mint Gelato&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Natural Sharp Cheddar Sliced Cheese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Avocado&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Blackberries&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Cheese Frozen Pizza&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Dill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Golden Delicious Apple&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Iceberg Lettuce&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Long Grain White Rice&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Old Fashioned Rolled Oats&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Red Lentils&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Short Grain Brown Rice&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Sugar Snap Peas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Wheat Square Crackers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Organic Yellow Onion&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Packaged Grape Tomatoes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pure &amp; Natural Sour Cream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Red Vine Tomato&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sea Salt Pita Chips&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Smartwater&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Squeeze Tomato Ketchup&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tilapia Filet&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Traditional Plain Greek Yogurt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vanilla Unsweetened Almond Milk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;XL Emerald White Seedless Grapes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;100\% Whole Wheat Bread&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Baby Arugula&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Blood Oranges&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canola Oil&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cinnamon Rolls with Icing&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Crunchy Almond Butter&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fat Free Strawberry Yogurt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Globe Eggplant&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Green Seedless Grapes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceberg Lettuce&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lightly Salted Baked Snap Pea Crisps&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Milk, Organic, Vitamin D&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Non Fat Raspberry Yogurt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Baby Rainbow Carrots&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Bread with 21 Whole Grains&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Chopped Spinach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Extra Virgin Olive Oil&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Greek Whole Milk Blended Vanilla Bean Yogurt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Lacinato (Dinosaur) Kale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Mayonnaise&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Pinto Beans&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Reduced Fat Milk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Small Bunch Celery&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Tomato Paste&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Organic Whole Crimini Mushrooms&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Original No Pulp 100\% Florida Orange Juice&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pesto Tortellini  Bowls&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rainbow Bell Peppers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roasted Turkey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shallot&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spaghetti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Super Spinach! Baby Spinach, Baby Bok Choy, Sweet Baby Kale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Total 0\% Greek Yogurt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Unrefined Virgin Coconut Oil&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Whipped Cream Cheese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yogurt, Strained Low-Fat, Coconut&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Aged White Cheddar Baked Rice &amp; Corn Puffs Gluten Free Lunch Packs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Baby Cucumbers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Blue Cheese Crumbles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cantaloupe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Classic Hummus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Crushed Tomatoes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Feta Cheese Crumbles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gluten Free 7 Grain Bread&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Green Tea With Ginseng and Honey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Icelandic Style Skyr Blueberry Non-fat Yogurt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lime&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Milk, Vitamin D&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nonfat Icelandic Style Strawberry Yogurt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Baby Spinach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Broccoli&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Cilantro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Fat Free Milk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Green Cabbage&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Lactose Free Whole Milk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Medium Salsa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Plain Greek Whole Milk Yogurt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Riced Cauliflower&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Small Curd Cottage Cheese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Tomato Sauce&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Organic Whole Grain Wheat English Muffins&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Original Nooks &amp; Crannies English Muffins&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philadelphia Original Cream Cheese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raisin Bran Cereal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roasted Turkey Breast&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sharp Cheddar Cheese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spaghetti  No 12&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Supergreens!&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Total 0\% Nonfat Greek Yogurt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Unsalted Butter&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;White Cheddar Popcorn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;YoKids Blueberry &amp; Strawberry/Vanilla Yogurt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;All Natural Marinara Sauce&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Baby Spinach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Boneless Skinless Chicken Breast&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cauliflower&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clementines, Bag&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dairy Free Unsweetened Coconut Milk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Flat Parsley, Bunch&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gluten Free SpongeBob Spinach Littles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guacamole&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jalapeno Peppers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Low Fat 1\% Milk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mint&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Orange Juice&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organic  Whole Milk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organic Banana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organic Brown Rice&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organic Cream Cheese Bar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organic Fresh Basil&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organic Green Onions&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organic Large Extra Fancy Fuji Apple&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organic Milk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organic Rainbow Carrots&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organic Roma Tomato&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organic Sour Cream&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organic Unbleached All-Purpose Flour&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Original Pure Creamy Almond Milk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Plain Bagels&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Raspberry Yoghurt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romaine Lettuce&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shredded Mild Cheddar Cheese&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sparkling Mineral Water&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sweet Onion&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Total 2\% All Natural Greek Strained Yogurt with Honey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Unsweetened Coconut Milk Beverage&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;White Peach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Whole Wheat English Muffins&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Almond Nut &amp; Rice Cracker Snacks&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Baked Aged White Cheddar Rice and Corn Puffs&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Boneless Skinless Chicken Thighs&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Celery Hearts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coke Classic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Diced Tomatoes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresh CA Grown Eggs&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Goat Cheese Crumbles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Half BakedÂ® Ice Cream&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kids Organic Chocolate Chip ZBars&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macaroni &amp; Cheese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monterey Jack Cheese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oregano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Basil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Bunny Fruit Snacks Berry Patch&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Cripps Pink Apples&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Frozen Peas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Half &amp; Half&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Large Grade AA Brown Eggs&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Mint&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Raw Kombucha Gingerade&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Romaine Hearts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Spinach Bunch&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Unsalted Butter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Organic Whole Milk with DHA Omega-3&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Original Rice Pilaf Mix&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plain Pre-Sliced Bagels&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Red Leaf Lettuce&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Russet Potato&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shredded Parmesan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sparkling Water&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweet Potato Tortilla Chips&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Total 2\% All Natural Plain Greek Yogurt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Unsweetened Vanilla Almond Milk&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Whole Milk&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;100\% Raw Coconut Water&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asparagus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Black Plum&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cage Free Large White Eggs&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chocolate Ice Cream&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Creamy Almond Butter&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ezekiel 4:9 Bread Organic Sprouted Whole Grain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Garlic Hummus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Green Bell Pepper&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hot Dog Buns&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India Pale Ale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lemon Yogurt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mild Cheddar Cheese Sticks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;No Pulp Calcium &amp; Vitamin D Pure Orange Juice&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic Baby Carrots&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic Boneless Skinless Chicken Breast&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic Chicken Stock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic Extra Firm Tofu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic Granny Smith Apple&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic Kale Greens&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic Lowfat 1\% Milk&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic Original Hommus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic Red Potatoes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic Sliced Crimini Mushrooms&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic Spicy Taco Seasoning&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic Thyme&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Organic White Cheddar Popcorn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Original Black Box Tablewater Cracker&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Penne Pasta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pure Sparkling Water&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Roasted &amp; Salted Almonds&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Seedless Small Watermelon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sonoma Traditional Flour Tortillas 10 Count&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sugar Snap Peas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tomato Sauce&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uncured Hickory Smoked Sunday Bacon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Walnut Halves &amp; Pieces&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;YoBaby Blueberry Apple Yogurt&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Pub Mix&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;93\% Ground Beef&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Apple Honeycrisp Organic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bing Cherries&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Butter&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chicken Breast Tenders Breaded&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cran Raspberry Sparkling Water&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;European Cucumber&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gala Apples&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grated Parmesan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Half And Half Ultra Pasteurized&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honey Wheat Enriched Bread&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honeycrisp Apple&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Large Lemon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Medium Cheddar Cheese Block&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Natural Spring Water&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Baby Arugula&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Blue Corn Tortilla Chips&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Chicken &amp; Apple Sausage&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Distilled White Vinegar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Good Seed Bread&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Italian Parsley Bunch&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Low Sodium Chicken Broth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Orange Bell Pepper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Red On the Vine Tomato&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Shredded Carrots&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Summer Strawberry Bunny Fruit Snacks&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Wheat-Free &amp; Gluten-Free Original Crackers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Organic Yellow Peaches&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panko Bread Crumbs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pure Baking Soda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Reduced Fat 2\% Milk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sea Salt Potato Chips&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Smoked Turkey Breast Slices&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Strawberries&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Toasted Coconut Almondmilk Blend&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trilogy Kombucha Drink&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Veggie Chips&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yellow Bell Pepper&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2\% Reduced Fat DHA Omega-3 Reduced Fat Milk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alpine Spring Water&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Basil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broccoli Crown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cheddar Bunnies Snack Crackers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cold Brew Coffee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dressing, Jersey Sweet Onion, Calorie Free&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fresh Ginger Root&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Golden Sweet Potato&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grade A Large White Eggs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Heavy Whipping Cream&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Large Alfresco Eggs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mango Chunks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Natural Chicken &amp; Sage Breakfast Sausage&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic 21 Grain Thin Sliced Bread&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic Beef Hot Dogs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic Cannellini Beans&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic D&apos;Anjou Pears&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic Garbanzo Beans&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic Homestyle Waffles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic Leek&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic Multigrain Waffles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic Red Cabbage&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic Rosemary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic Sticks Low Moisture Part Skim Mozzarella String Cheese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic Vanilla Almond Milk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Organic Whole String Cheese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Original Veggie Straws&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Potato Yukon Gold Organic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Red Plums&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sauvignon Blanc&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Skim Milk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Special Reserve Extra Sharp Cheddar Cheese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taco Seasoning&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Total 2\% Lowfat Greek Strained Yogurt with Peach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vanilla Ice Cream&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Whole Organic Omega 3 Milk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Air Chilled Breaded Chicken Breast Nuggets&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Baby Food Stage 2 Blueberry Pear &amp; Purple Carrot&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Blueberries&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Caramel Cookie Crunch Gelato&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Classic White Bread&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cucumber &amp; Garlic  Tzatziki&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Firm Tofu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gluten Free Chocolate Chip Cookies&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grilled Chicken Breast&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Italian Extra Virgin Olive Oil&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lime Sparkling Water&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mini Cucumbers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Orange Bell Pepper&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Organic Baby Spinach Salad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Organic Broccoli Crowns&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Organic Cinnamon Crunch Cereal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Organic Free Range Chicken Broth&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Organic Green Leaf Lettuce&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Organic Large Brown Eggs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Organic Medjool Dates&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Organic Plain Whole Milk Yogurt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Organic Roasted Sliced Chicken Breast&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Organic Smoked Turkey Breast&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Organic Tortilla Chips&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Organic Whole Grassmilk Milk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Original Orange Juice&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pineapple Chunks&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Raspberries&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Roma Tomato&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shells &amp; Real Aged Cheddar Macaroni &amp; Cheese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spaghetti Pasta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sustainably Soft Bath Tissue&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Total 0\% Nonfat Plain Greek Yogurt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Unsalted Pure Irish Butter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;White Corn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;YoKids Squeezers Organic Low-Fat Yogurt, Strawberry&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;100\% Recycled Bathroom Tissue&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asparation/Broccolini/Baby Broccoli&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Blackberries&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;California Sourdough Bread&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chopped Spinach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Creamy Peanut Butter&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fancy Eggplant&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Garlic Powder&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Green Onions&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;I Heart Baby Kale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lemonade&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mild Diced Green Chiles&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;No Pulp Calcium &amp; Vitamin D Pure Premium 100\% Pure Orange Juice&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic Baby Kale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic Bosc Pear&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic Chicken Strips&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic Extra Large Brown Eggs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic Grape Tomatoes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic Ketchup&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic Macaroni Shells &amp; Real Aged Cheddar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic Peeled Whole Baby Carrots&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic Red Radish, Bunch&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic Sliced Peaches&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic Tomato Basil Pasta Sauce&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Organic White Onions&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Original Hot Sauce&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Penne Rigate&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Purified Water&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Roasted Pine Nut Hummus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serrano Chile Peppers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sour Cream&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Super Greens Salad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tomatoes, Whole Peeled&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uncured Pepperoni&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Water&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yobaby Organic Plain Yogurt&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Trail Mix&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2\% Reduced Fat Milk&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aluminum Foil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Basil Pesto&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brussels Sprouts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cabernet Sauvignon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cheerios Cereal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Collard Greens&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dried Mango&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fresh Mozzarella Ball&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Granny Smith Apples&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hint Of Sea Salt Almond Nut Thins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Large Brown Eggs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Margherita Pizza&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Natural Classic Pork Breakfast Sausage&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic American Cheese Singles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic Beef Uncured Hot Dogs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic Carrot Bunch&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic Dark Chocolate Peanut Butter Cups&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic Garlic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic Honey Sweet Whole Wheat Bread&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic Lemon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic Navel Orange&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic Red Chard Greens&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic Russet Potato&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic Strawberries&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic Vanilla Bean Ice Cream&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Organic Whole Wheat Bread&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Original Whipped Cream Cheese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Premium Pure Cane Granulated Sugar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Red Potatoes&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Scoops! Tortilla Chips&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sliced Black Olives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spinach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thick &amp; Crispy Tortilla Chips&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Total 2\% Lowfat Plain Greek Yogurt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vanilla Pure Almond Milk&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Whole Strawberries&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:aisle:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;beauty&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;coffee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;honeys syrups nectars&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;milk&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;nuts seeds dried fruit&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;protein meal replacements&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;trail mix snack mix&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;bread&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;canned jarred vegetables&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;dry pasta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozen meat seafood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;lunch meat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;pasta sauce&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;specialty cheeses&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;cereal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;eye ear care&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;fresh fruits&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;fruit vegetable snacks&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;mint gum&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;poultry counter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;spreads&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;breakfast bakery&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;first aid&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;fresh pasta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;other creams cheeses&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;salad dressing toppings&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;soy lactosefree&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;white wines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;beers coolers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;cold flu allergy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;fresh dips tapenades&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;oils vinegars&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;packaged cheese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;red wines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;trash bags liners&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;bakery desserts&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;facial care&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;fresh vegetables&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;grains rice dried goods&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;missing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;prepared meals&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;tea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;baby bath body care&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;candy chocolate&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;dog food care&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozen juice&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;latino foods&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;skin care&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;soup broth bouillon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;canned meals beans&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;chips pretzels&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;eggs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozen pizza&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;marinades meat preparation&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;pickled goods olives&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;specialty wines champagnes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;asian foods&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;buns rolls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;digestion&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozen breakfast&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;kitchen supplies&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;packaged produce&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;baking ingredients&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;feminine care&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozen produce&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;granola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;more household&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;prepared soups salads&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;tofu meat alternatives&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;breakfast bars pastries&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;cream&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;hot dogs bacon sausage&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;indian foods&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;seafood counter&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;water seltzer sparkling water&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;bulk dried fruits vegetables&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;deodorants&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozen appetizers sides&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;instant foods&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;shave needs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;yogurt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;baby accessories&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;butter&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;dish detergents&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozen dessert&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;kosher foods&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;packaged seafood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;soft drinks&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;baby food formula&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;canned fruit applesauce&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;doughs gelatins bake mixes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozen meals&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;laundry&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;paper goods&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;body lotions soap&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;condiments&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;hot cereal pancake mixes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;oral hygiene&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;packaged vegetables fruits&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;soap&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;vitamins supplements&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;baking supplies decor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;cocoa drink mixes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;hair care&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ice cream ice&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;muscles joints pain relief&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;preserved dips spreads&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;tortillas flat bread&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;canned meat seafood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;crackers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;food storage&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ice cream toppings&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;meat counter&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;plates bowls cups flatware&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;spices seasonings&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;air fresheners candles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;bulk grains rice dried goods&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;diapers wipes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozen breads doughs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;juice nectars&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;packaged poultry&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;cleaning products&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;cookies cakes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;fresh herbs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;other&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;refrigerated&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;refrigerated pudding desserts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;cat food care&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;energy granola bars&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;energy sports drinks&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozen vegan vegetarian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;packaged meat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;popcorn jerky&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;spirits&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='aisles.csv' id='aisles.csv_55871F268FE1467D93C979E5CAF19142'>
            <properties context=''>
              <relation connection='textscan.1ghfnoa0ebpunj1c7bueg1vkkil1' name='aisles.csv' table='[aisles#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='aisle_id' ordinal='0' />
                  <column datatype='string' name='aisle' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='departments.csv' id='departments.csv_0DED5794A27346BD807EC82CDDCE479A'>
            <properties context=''>
              <relation connection='textscan.1ghfnoa0ebpunj1c7bueg1vkkil1' name='departments.csv' table='[departments#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='department_id' ordinal='0' />
                  <column datatype='string' name='department' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='order_products.csv' id='order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B'>
            <properties context=''>
              <relation all='true' name='order_products__prior.csv+' type='union'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='order_id' />
                  <column datatype='integer' name='product_id' />
                  <column datatype='integer' name='add_to_cart_order' />
                  <column datatype='integer' name='reordered' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='textscan.1ghfnoa0ebpunj1c7bueg1vkkil1' name='order_products__prior.csv' table='[order_products__prior#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                    <column datatype='integer' name='order_id' ordinal='0' />
                    <column datatype='integer' name='product_id' ordinal='1' />
                    <column datatype='integer' name='add_to_cart_order' ordinal='2' />
                    <column datatype='integer' name='reordered' ordinal='3' />
                  </columns>
                </relation>
                <relation connection='textscan.1ghfnoa0ebpunj1c7bueg1vkkil1' name='order_products__train.csv' table='[order_products__train#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                    <column datatype='integer' name='order_id' ordinal='0' />
                    <column datatype='integer' name='product_id' ordinal='1' />
                    <column datatype='integer' name='add_to_cart_order' ordinal='2' />
                    <column datatype='integer' name='reordered' ordinal='3' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
          <object caption='orders.csv' id='orders.csv_27573D3D4F614FE9835144F6593D6CCC'>
            <properties context=''>
              <relation connection='textscan.1ghfnoa0ebpunj1c7bueg1vkkil1' name='orders.csv' table='[orders#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='order_id' ordinal='0' />
                  <column datatype='integer' name='user_id' ordinal='1' />
                  <column datatype='string' name='eval_set' ordinal='2' />
                  <column datatype='integer' name='order_number' ordinal='3' />
                  <column datatype='integer' name='order_dow' ordinal='4' />
                  <column datatype='integer' name='order_hour_of_day' ordinal='5' />
                  <column datatype='real' name='days_since_prior_order' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='products.csv' id='products.csv_86C6B5E265AB41C98EDFB93EB5DBF6AB'>
            <properties context=''>
              <relation connection='textscan.1ghfnoa0ebpunj1c7bueg1vkkil1' name='products.csv' table='[products#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='product_id' ordinal='0' />
                  <column datatype='string' name='product_name' ordinal='1' />
                  <column datatype='integer' name='aisle_id' ordinal='2' />
                  <column datatype='integer' name='department_id' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[aisle_id]' />
              <expression op='[aisle_id (aisles.csv)]' />
            </expression>
            <first-end-point object-id='products.csv_86C6B5E265AB41C98EDFB93EB5DBF6AB' />
            <second-end-point object-id='aisles.csv_55871F268FE1467D93C979E5CAF19142' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[department_id]' />
              <expression op='[department_id (departments.csv)]' />
            </expression>
            <first-end-point object-id='products.csv_86C6B5E265AB41C98EDFB93EB5DBF6AB' />
            <second-end-point object-id='departments.csv_0DED5794A27346BD807EC82CDDCE479A' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[order_id]' />
              <expression op='[order_id (order_products__prior.csv+)]' />
            </expression>
            <first-end-point object-id='orders.csv_27573D3D4F614FE9835144F6593D6CCC' />
            <second-end-point object-id='order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[product_id]' />
              <expression op='[product_id (products.csv)]' />
            </expression>
            <first-end-point object-id='order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B' />
            <second-end-point object-id='products.csv_86C6B5E265AB41C98EDFB93EB5DBF6AB' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Soham - Best Selling Products'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Best Selling Products</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1jvdhp01ik5ria1bh1cgi0done31' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvdhp01ik5ria1bh1cgi0done31'>
            <_.fcp.ObjectModelTableType.false...column caption='order_products.csv' datatype='integer' name='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='order_products.csv' datatype='table' name='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' role='measure' type='quantitative' />
            <column-instance column='[order_number]' derivation='None' name='[none:order_number:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column caption='Order Number' datatype='integer' name='[order_number]' role='dimension' type='ordinal' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_number:ok]' context='true'>
            <groupfilter function='member' level='[none:order_number:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:product_name:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_number:ok]</column>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]' scope='cols' value='Number of Items Sold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]</rows>
        <cols>[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]</cols>
      </table>
      <simple-id uuid='{E31CE6A8-D97A-47FB-8793-56513705B1B5}' />
    </worksheet>
    <worksheet name='Soham - Busiest Days of the Week'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Busiest Days of the Week</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1jvdhp01ik5ria1bh1cgi0done31' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvdhp01ik5ria1bh1cgi0done31'>
            <column aggregation='None' datatype='integer' name='[Order Dow (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[order_dow]' peg='0' size='1' />
            </column>
            <column-instance column='[order_dow]' derivation='Count' name='[cnt:order_dow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Dow (bin)]' derivation='None' name='[none:Order Dow (bin):ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Order Dow' datatype='integer' name='[order_dow]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[cnt:order_dow:qk]' scope='rows' value='Number of Orders' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1jvdhp01ik5ria1bh1cgi0done31].[cnt:order_dow:qk]</rows>
        <cols>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:Order Dow (bin):ok]</cols>
        <show-full-range>
          <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{B3DE5FF4-455B-4846-A646-752BC64822A7}' />
    </worksheet>
    <worksheet name='Soham - Busiest Hours'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Busiest Hours</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1jvdhp01ik5ria1bh1cgi0done31' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvdhp01ik5ria1bh1cgi0done31'>
            <_.fcp.ObjectModelTableType.false...column caption='orders.csv' datatype='integer' name='[__tableau_internal_object_id__].[orders.csv_27573D3D4F614FE9835144F6593D6CCC]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[orders.csv_27573D3D4F614FE9835144F6593D6CCC]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:orders.csv_27573D3D4F614FE9835144F6593D6CCC:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='orders.csv' datatype='table' name='[__tableau_internal_object_id__].[orders.csv_27573D3D4F614FE9835144F6593D6CCC]' role='measure' type='quantitative' />
            <column-instance column='[order_dow]' derivation='None' name='[none:order_dow:ok]' pivot='key' type='ordinal' />
            <column-instance column='[order_hour_of_day]' derivation='None' name='[none:order_hour_of_day:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Order Dow' datatype='integer' name='[order_dow]' role='dimension' type='ordinal' />
            <column caption='Order Hour Of Day' datatype='integer' name='[order_hour_of_day]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:orders.csv_27573D3D4F614FE9835144F6593D6CCC:qk]' scope='rows' value='Number of Orders' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:orders.csv_27573D3D4F614FE9835144F6593D6CCC:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:orders.csv_27573D3D4F614FE9835144F6593D6CCC:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:orders.csv_27573D3D4F614FE9835144F6593D6CCC:qk]</rows>
        <cols>([federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_dow:ok] / [federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_hour_of_day:ok])</cols>
      </table>
      <simple-id uuid='{A6DB27EF-BCB8-4059-9BD3-76A06A557E3D}' />
    </worksheet>
    <worksheet name='Soham - Busiest Hours - Groups'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1jvdhp01ik5ria1bh1cgi0done31' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvdhp01ik5ria1bh1cgi0done31'>
            <column datatype='string' name='[Order Dow &amp; Order Hour Of Day (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Order Dow &amp; Order Hour Of Day]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Early Birds&quot;'>
                  <value>(0,6)</value>
                  <value>(0,7)</value>
                  <value>(0,8)</value>
                  <value>(1,6)</value>
                  <value>(1,7)</value>
                  <value>(1,8)</value>
                  <value>(2,6)</value>
                  <value>(2,7)</value>
                  <value>(2,8)</value>
                  <value>(3,6)</value>
                  <value>(3,7)</value>
                  <value>(3,8)</value>
                  <value>(4,6)</value>
                  <value>(4,7)</value>
                  <value>(4,8)</value>
                  <value>(5,6)</value>
                  <value>(5,7)</value>
                  <value>(5,8)</value>
                  <value>(6,6)</value>
                  <value>(6,7)</value>
                  <value>(6,8)</value>
                </bin>
                <bin default-name='false' value='&quot;Evening Hours&quot;'>
                  <value>(0,16)</value>
                  <value>(0,17)</value>
                  <value>(0,18)</value>
                  <value>(1,16)</value>
                  <value>(1,17)</value>
                  <value>(1,18)</value>
                  <value>(2,16)</value>
                  <value>(2,17)</value>
                  <value>(2,18)</value>
                  <value>(3,16)</value>
                  <value>(3,17)</value>
                  <value>(3,18)</value>
                  <value>(4,16)</value>
                  <value>(4,17)</value>
                  <value>(4,18)</value>
                  <value>(5,16)</value>
                  <value>(5,17)</value>
                  <value>(5,18)</value>
                  <value>(6,16)</value>
                  <value>(6,17)</value>
                  <value>(6,18)</value>
                </bin>
                <bin default-name='false' value='&quot;Friday Rush Hours&quot;'>
                  <value>(6,13)</value>
                  <value>(6,14)</value>
                  <value>(6,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Late Night Hours&quot;'>
                  <value>(0,21)</value>
                  <value>(0,22)</value>
                  <value>(0,23)</value>
                  <value>(1,21)</value>
                  <value>(1,22)</value>
                  <value>(1,23)</value>
                  <value>(2,21)</value>
                  <value>(2,22)</value>
                  <value>(2,23)</value>
                  <value>(3,21)</value>
                  <value>(3,22)</value>
                  <value>(3,23)</value>
                  <value>(4,21)</value>
                  <value>(4,22)</value>
                  <value>(4,23)</value>
                  <value>(5,21)</value>
                  <value>(5,22)</value>
                  <value>(5,23)</value>
                  <value>(6,21)</value>
                  <value>(6,22)</value>
                  <value>(6,23)</value>
                </bin>
                <bin default-name='false' value='&quot;Monday-Thursday Rush Hours&quot;'>
                  <value>(2,10)</value>
                  <value>(2,11)</value>
                  <value>(2,15)</value>
                  <value>(3,10)</value>
                  <value>(3,11)</value>
                  <value>(3,15)</value>
                  <value>(4,10)</value>
                  <value>(4,11)</value>
                  <value>(4,15)</value>
                  <value>(5,10)</value>
                  <value>(5,11)</value>
                  <value>(5,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Weekend Busiest Hours&quot;'>
                  <value>(0,13)</value>
                  <value>(0,14)</value>
                  <value>(0,15)</value>
                  <value>(1,9)</value>
                  <value>(1,10)</value>
                  <value>(1,11)</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='orders.csv' datatype='integer' name='[__tableau_internal_object_id__].[orders.csv_27573D3D4F614FE9835144F6593D6CCC]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[orders.csv_27573D3D4F614FE9835144F6593D6CCC]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:orders.csv_27573D3D4F614FE9835144F6593D6CCC:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='orders.csv' datatype='table' name='[__tableau_internal_object_id__].[orders.csv_27573D3D4F614FE9835144F6593D6CCC]' role='measure' type='quantitative' />
            <column-instance column='[order_dow]' derivation='None' name='[none:order_dow:ok]' pivot='key' type='ordinal' />
            <column-instance column='[order_hour_of_day]' derivation='None' name='[none:order_hour_of_day:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Order Dow' datatype='integer' name='[order_dow]' role='dimension' type='ordinal' />
            <column caption='Order Hour Of Day' datatype='integer' name='[order_hour_of_day]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:orders.csv_27573D3D4F614FE9835144F6593D6CCC:qk]' field-type='quantitative' max='58862' min='-183' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:orders.csv_27573D3D4F614FE9835144F6593D6CCC:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:orders.csv_27573D3D4F614FE9835144F6593D6CCC:qk]</rows>
        <cols>([federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_dow:ok] / [federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_hour_of_day:ok])</cols>
      </table>
      <simple-id uuid='{127D801C-705A-44EA-A542-A63AF7C23BC5}' />
    </worksheet>
    <worksheet name='Soham - Busiest Hours - Rank'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1jvdhp01ik5ria1bh1cgi0done31' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvdhp01ik5ria1bh1cgi0done31'>
            <column caption='Hour Rank' datatype='integer' name='[Calculation_158189003765882887]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE(COUNT([__tableau_internal_object_id__].[orders.csv_27573D3D4F614FE9835144F6593D6CCC]))'>
                <table-calc ordering-field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[order_hour_of_day]' ordering-type='Field' />
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='orders.csv' datatype='integer' name='[__tableau_internal_object_id__].[orders.csv_27573D3D4F614FE9835144F6593D6CCC]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[orders.csv_27573D3D4F614FE9835144F6593D6CCC]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:orders.csv_27573D3D4F614FE9835144F6593D6CCC:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='orders.csv' datatype='table' name='[__tableau_internal_object_id__].[orders.csv_27573D3D4F614FE9835144F6593D6CCC]' role='measure' type='quantitative' />
            <column-instance column='[order_dow]' derivation='None' name='[none:order_dow:ok]' pivot='key' type='ordinal' />
            <column-instance column='[order_hour_of_day]' derivation='None' name='[none:order_hour_of_day:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Order Dow' datatype='integer' name='[order_dow]' role='dimension' type='ordinal' />
            <column caption='Order Hour Of Day' datatype='integer' name='[order_hour_of_day]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_158189003765882887]' derivation='User' name='[usr:Calculation_158189003765882887:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[order_hour_of_day]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:orders.csv_27573D3D4F614FE9835144F6593D6CCC:qk]' field-type='quantitative' max='58862' min='-183' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:orders.csv_27573D3D4F614FE9835144F6593D6CCC:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003765882887:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:orders.csv_27573D3D4F614FE9835144F6593D6CCC:qk]</rows>
        <cols>([federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_dow:ok] / [federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_hour_of_day:ok])</cols>
      </table>
      <simple-id uuid='{E20F3C2C-CDC3-4D29-83AB-EFACCB523FB7}' />
    </worksheet>
    <worksheet name='Soham - Days Since Prior Order'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Days Since Prior Order</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1jvdhp01ik5ria1bh1cgi0done31' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvdhp01ik5ria1bh1cgi0done31'>
            <column aggregation='None' datatype='integer' name='[Days Since Prior Order (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[days_since_prior_order]' peg='0' size='1' />
            </column>
            <column-instance column='[days_since_prior_order]' derivation='Count' name='[cnt:days_since_prior_order:qk]' pivot='key' type='quantitative' />
            <column caption='Days Since Prior Order' datatype='real' name='[days_since_prior_order]' role='measure' type='quantitative' />
            <column-instance column='[Days Since Prior Order (bin)]' derivation='None' name='[none:Days Since Prior Order (bin):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:Days Since Prior Order (bin):qk]' scope='cols' value='Days' />
            <format attr='title' class='0' field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[cnt:days_since_prior_order:qk]' scope='rows' value='Number of Items' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.1jvdhp01ik5ria1bh1cgi0done31].[cnt:days_since_prior_order:qk]</rows>
        <cols>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:Days Since Prior Order (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[Days Since Prior Order (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{1137FDB3-B12A-4D95-AF50-B02B6537C964}' />
    </worksheet>
    <worksheet name='Soham - Number of Items Purchased per Order'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Number of Items Purchased per Order</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1jvdhp01ik5ria1bh1cgi0done31' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvdhp01ik5ria1bh1cgi0done31'>
            <column caption='Number of Items per Order' datatype='integer' name='[Calculation_158189003743723523]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [order_id (order_products__prior.csv+)]:COUNT([product_id])}' />
            </column>
            <column aggregation='None' datatype='integer' name='[Number of Items per Order (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[Calculation_158189003743723523]' peg='0' size='1' />
            </column>
            <column-instance column='[Calculation_158189003743723523]' derivation='Count' name='[cnt:Calculation_158189003743723523:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Items per Order (bin)]' derivation='None' name='[none:Number of Items per Order (bin):qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[order_id (order_products__prior.csv+)]' role='measure' type='quantitative' />
            <column caption='Product Id' datatype='integer' name='[product_id]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:Number of Items per Order (bin):qk]' scope='cols' value='Number of Items per Order' />
            <format attr='title' class='0' field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[cnt:Calculation_158189003743723523:qk]' scope='rows' value='Number of Items' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.1jvdhp01ik5ria1bh1cgi0done31].[cnt:Calculation_158189003743723523:qk]</rows>
        <cols>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:Number of Items per Order (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[Number of Items per Order (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{299BE275-9674-4FFB-AD8D-B83BBAA9BB95}' />
    </worksheet>
    <worksheet name='Soham - Number of Products Sold per Department'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1jvdhp01ik5ria1bh1cgi0done31' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvdhp01ik5ria1bh1cgi0done31'>
            <_.fcp.ObjectModelTableType.false...column caption='order_products.csv' datatype='integer' name='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='order_products.csv' datatype='table' name='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' role='measure' type='quantitative' />
            <column caption='Department' datatype='string' name='[department]' role='dimension' type='nominal' />
            <column-instance column='[department]' derivation='None' name='[none:department:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:department:nk]' />
              <size column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]' />
              <text column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:department:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DACEB7D8-3CD4-4107-8B95-F79AE3E88008}' />
    </worksheet>
    <worksheet name='Soham - Top 10 Products in the Busiest Hours'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1jvdhp01ik5ria1bh1cgi0done31' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvdhp01ik5ria1bh1cgi0done31'>
            <_.fcp.ObjectModelTableType.false...column caption='orders.csv' datatype='integer' name='[__tableau_internal_object_id__].[orders.csv_27573D3D4F614FE9835144F6593D6CCC]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[orders.csv_27573D3D4F614FE9835144F6593D6CCC]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:orders.csv_27573D3D4F614FE9835144F6593D6CCC:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='orders.csv' datatype='table' name='[__tableau_internal_object_id__].[orders.csv_27573D3D4F614FE9835144F6593D6CCC]' role='measure' type='quantitative' />
            <column-instance column='[order_hour_of_day]' derivation='None' name='[none:order_hour_of_day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column caption='Order Hour Of Day' datatype='integer' name='[order_hour_of_day]' role='dimension' type='ordinal' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_hour_of_day:ok]' context='true'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:order_hour_of_day:ok]' member='8' />
              <groupfilter function='member' level='[none:order_hour_of_day:ok]' member='10' />
              <groupfilter function='member' level='[none:order_hour_of_day:ok]' member='11' />
              <groupfilter function='member' level='[none:order_hour_of_day:ok]' member='12' />
              <groupfilter function='member' level='[none:order_hour_of_day:ok]' member='13' />
              <groupfilter function='member' level='[none:order_hour_of_day:ok]' member='14' />
              <groupfilter function='member' level='[none:order_hour_of_day:ok]' member='15' />
              <groupfilter function='member' level='[none:order_hour_of_day:ok]' member='16' />
              <groupfilter function='member' level='[none:order_hour_of_day:ok]' member='17' />
              <groupfilter function='member' level='[none:order_hour_of_day:ok]' member='18' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[orders.csv_27573D3D4F614FE9835144F6593D6CCC])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:product_name:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:orders.csv_27573D3D4F614FE9835144F6593D6CCC:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_hour_of_day:ok]</column>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:orders.csv_27573D3D4F614FE9835144F6593D6CCC:qk]</rows>
        <cols>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]</cols>
      </table>
      <simple-id uuid='{BB763742-78E8-4BEB-95EB-D1C3BE8C0E69}' />
    </worksheet>
    <worksheet name='Soham - Top 10 Reordered Products'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1jvdhp01ik5ria1bh1cgi0done31' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvdhp01ik5ria1bh1cgi0done31'>
            <column caption='Index &lt;= 10' datatype='boolean' name='[Calculation_158189003742556162]' role='measure' type='nominal'>
              <calculation class='tableau' formula='INDEX()&lt;=10'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='order_products.csv' datatype='integer' name='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='order_products.csv' datatype='table' name='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' role='measure' type='quantitative' />
            <column-instance column='[reordered]' derivation='Avg' name='[avg:reordered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column caption='Reordered' datatype='integer' name='[reordered]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_158189003742556162]' derivation='User' name='[usr:Calculation_158189003742556162:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]' included-values='in-range'>
            <min>40</min>
            <max>491291</max>
          </filter>
          <filter class='categorical' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003742556162:nk]'>
            <groupfilter function='member' level='[usr:Calculation_158189003742556162:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1jvdhp01ik5ria1bh1cgi0done31].[avg:reordered:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]</column>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003742556162:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]</rows>
        <cols>[federated.1jvdhp01ik5ria1bh1cgi0done31].[avg:reordered:qk]</cols>
      </table>
      <simple-id uuid='{DAC54558-5BCB-4693-A9EB-6AE9152EE4A1}' />
    </worksheet>
    <worksheet name='Soham - Top Products per Group-Early Birds'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1jvdhp01ik5ria1bh1cgi0done31' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvdhp01ik5ria1bh1cgi0done31'>
            <column caption='Percentage of Total Orders' datatype='real' name='[Calculation_158189003816521736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([order_id (order_products__prior.csv+)])/SUM({ FIXED [product_name]:COUNT([order_id (order_products__prior.csv+)])})' />
            </column>
            <column caption='Rank - Percentage of Total Orders' datatype='integer' name='[Calculation_158189003817390089]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE([Calculation_158189003816521736])'>
                <table-calc ordering-field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[order_hour_of_day]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Order Dow &amp; Order Hour Of Day (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Order Dow &amp; Order Hour Of Day]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Early Birds&quot;'>
                  <value>(0,6)</value>
                  <value>(0,7)</value>
                  <value>(0,8)</value>
                  <value>(1,6)</value>
                  <value>(1,7)</value>
                  <value>(1,8)</value>
                  <value>(2,6)</value>
                  <value>(2,7)</value>
                  <value>(2,8)</value>
                  <value>(3,6)</value>
                  <value>(3,7)</value>
                  <value>(3,8)</value>
                  <value>(4,6)</value>
                  <value>(4,7)</value>
                  <value>(4,8)</value>
                  <value>(5,6)</value>
                  <value>(5,7)</value>
                  <value>(5,8)</value>
                  <value>(6,6)</value>
                  <value>(6,7)</value>
                  <value>(6,8)</value>
                </bin>
                <bin default-name='false' value='&quot;Evening Hours&quot;'>
                  <value>(0,16)</value>
                  <value>(0,17)</value>
                  <value>(0,18)</value>
                  <value>(1,16)</value>
                  <value>(1,17)</value>
                  <value>(1,18)</value>
                  <value>(2,16)</value>
                  <value>(2,17)</value>
                  <value>(2,18)</value>
                  <value>(3,16)</value>
                  <value>(3,17)</value>
                  <value>(3,18)</value>
                  <value>(4,16)</value>
                  <value>(4,17)</value>
                  <value>(4,18)</value>
                  <value>(5,16)</value>
                  <value>(5,17)</value>
                  <value>(5,18)</value>
                  <value>(6,16)</value>
                  <value>(6,17)</value>
                  <value>(6,18)</value>
                </bin>
                <bin default-name='false' value='&quot;Friday Rush Hours&quot;'>
                  <value>(6,13)</value>
                  <value>(6,14)</value>
                  <value>(6,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Late Night Hours&quot;'>
                  <value>(0,21)</value>
                  <value>(0,22)</value>
                  <value>(0,23)</value>
                  <value>(1,21)</value>
                  <value>(1,22)</value>
                  <value>(1,23)</value>
                  <value>(2,21)</value>
                  <value>(2,22)</value>
                  <value>(2,23)</value>
                  <value>(3,21)</value>
                  <value>(3,22)</value>
                  <value>(3,23)</value>
                  <value>(4,21)</value>
                  <value>(4,22)</value>
                  <value>(4,23)</value>
                  <value>(5,21)</value>
                  <value>(5,22)</value>
                  <value>(5,23)</value>
                  <value>(6,21)</value>
                  <value>(6,22)</value>
                  <value>(6,23)</value>
                </bin>
                <bin default-name='false' value='&quot;Monday-Thursday Rush Hours&quot;'>
                  <value>(2,10)</value>
                  <value>(2,11)</value>
                  <value>(2,15)</value>
                  <value>(3,10)</value>
                  <value>(3,11)</value>
                  <value>(3,15)</value>
                  <value>(4,10)</value>
                  <value>(4,11)</value>
                  <value>(4,15)</value>
                  <value>(5,10)</value>
                  <value>(5,11)</value>
                  <value>(5,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Weekend Busiest Hours&quot;'>
                  <value>(0,13)</value>
                  <value>(0,14)</value>
                  <value>(0,15)</value>
                  <value>(1,9)</value>
                  <value>(1,10)</value>
                  <value>(1,11)</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='order_products.csv' datatype='integer' name='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='order_products.csv' datatype='table' name='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' role='measure' type='quantitative' />
            <column-instance column='[order_dow]' derivation='None' name='[none:order_dow:ok]' pivot='key' type='ordinal' />
            <column-instance column='[order_hour_of_day]' derivation='None' name='[none:order_hour_of_day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Order Dow' datatype='integer' name='[order_dow]' role='dimension' type='ordinal' />
            <column caption='Order Hour Of Day' datatype='integer' name='[order_hour_of_day]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[order_id (order_products__prior.csv+)]' role='measure' type='quantitative' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_158189003816521736]' derivation='User' name='[usr:Calculation_158189003816521736:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_158189003817390089]' derivation='User' name='[usr:Calculation_158189003817390089:qk:2]' pivot='key' type='quantitative'>
              <table-calc level-break='[federated.1jvdhp01ik5ria1bh1cgi0done31].[product_name]' ordering-type='Field'>
                <order field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[order_hour_of_day]' />
                <order field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[product_name]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]'>
            <groupfilter function='member' level='[Order Dow &amp; Order Hour Of Day (group)]' member='&quot;Early Birds&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]' included-values='in-range'>
            <min>100</min>
            <max>9227</max>
          </filter>
          <filter class='quantitative' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003817390089:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]</column>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003817390089:qk:2]</column>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]' />
              <text column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003816521736:qk]</rows>
        <cols>([federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_dow:ok] / ([federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_hour_of_day:ok] / [federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]))</cols>
      </table>
      <simple-id uuid='{D2BD721B-7B3C-43C1-9B9B-8123E85ACFE1}' />
    </worksheet>
    <worksheet name='Soham - Top Products per Group-Evening Hours'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1jvdhp01ik5ria1bh1cgi0done31' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvdhp01ik5ria1bh1cgi0done31'>
            <column caption='Percentage of Total Orders' datatype='real' name='[Calculation_158189003816521736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([order_id (order_products__prior.csv+)])/SUM({ FIXED [product_name]:COUNT([order_id (order_products__prior.csv+)])})' />
            </column>
            <column caption='Rank - Percentage of Total Orders' datatype='integer' name='[Calculation_158189003817390089]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE([Calculation_158189003816521736])'>
                <table-calc ordering-field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[order_hour_of_day]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Order Dow &amp; Order Hour Of Day (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Order Dow &amp; Order Hour Of Day]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Early Birds&quot;'>
                  <value>(0,6)</value>
                  <value>(0,7)</value>
                  <value>(0,8)</value>
                  <value>(1,6)</value>
                  <value>(1,7)</value>
                  <value>(1,8)</value>
                  <value>(2,6)</value>
                  <value>(2,7)</value>
                  <value>(2,8)</value>
                  <value>(3,6)</value>
                  <value>(3,7)</value>
                  <value>(3,8)</value>
                  <value>(4,6)</value>
                  <value>(4,7)</value>
                  <value>(4,8)</value>
                  <value>(5,6)</value>
                  <value>(5,7)</value>
                  <value>(5,8)</value>
                  <value>(6,6)</value>
                  <value>(6,7)</value>
                  <value>(6,8)</value>
                </bin>
                <bin default-name='false' value='&quot;Evening Hours&quot;'>
                  <value>(0,16)</value>
                  <value>(0,17)</value>
                  <value>(0,18)</value>
                  <value>(1,16)</value>
                  <value>(1,17)</value>
                  <value>(1,18)</value>
                  <value>(2,16)</value>
                  <value>(2,17)</value>
                  <value>(2,18)</value>
                  <value>(3,16)</value>
                  <value>(3,17)</value>
                  <value>(3,18)</value>
                  <value>(4,16)</value>
                  <value>(4,17)</value>
                  <value>(4,18)</value>
                  <value>(5,16)</value>
                  <value>(5,17)</value>
                  <value>(5,18)</value>
                  <value>(6,16)</value>
                  <value>(6,17)</value>
                  <value>(6,18)</value>
                </bin>
                <bin default-name='false' value='&quot;Friday Rush Hours&quot;'>
                  <value>(6,13)</value>
                  <value>(6,14)</value>
                  <value>(6,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Late Night Hours&quot;'>
                  <value>(0,21)</value>
                  <value>(0,22)</value>
                  <value>(0,23)</value>
                  <value>(1,21)</value>
                  <value>(1,22)</value>
                  <value>(1,23)</value>
                  <value>(2,21)</value>
                  <value>(2,22)</value>
                  <value>(2,23)</value>
                  <value>(3,21)</value>
                  <value>(3,22)</value>
                  <value>(3,23)</value>
                  <value>(4,21)</value>
                  <value>(4,22)</value>
                  <value>(4,23)</value>
                  <value>(5,21)</value>
                  <value>(5,22)</value>
                  <value>(5,23)</value>
                  <value>(6,21)</value>
                  <value>(6,22)</value>
                  <value>(6,23)</value>
                </bin>
                <bin default-name='false' value='&quot;Monday-Thursday Rush Hours&quot;'>
                  <value>(2,10)</value>
                  <value>(2,11)</value>
                  <value>(2,15)</value>
                  <value>(3,10)</value>
                  <value>(3,11)</value>
                  <value>(3,15)</value>
                  <value>(4,10)</value>
                  <value>(4,11)</value>
                  <value>(4,15)</value>
                  <value>(5,10)</value>
                  <value>(5,11)</value>
                  <value>(5,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Weekend Busiest Hours&quot;'>
                  <value>(0,13)</value>
                  <value>(0,14)</value>
                  <value>(0,15)</value>
                  <value>(1,9)</value>
                  <value>(1,10)</value>
                  <value>(1,11)</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='order_products.csv' datatype='integer' name='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='order_products.csv' datatype='table' name='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' role='measure' type='quantitative' />
            <column-instance column='[order_dow]' derivation='None' name='[none:order_dow:ok]' pivot='key' type='ordinal' />
            <column-instance column='[order_hour_of_day]' derivation='None' name='[none:order_hour_of_day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Order Dow' datatype='integer' name='[order_dow]' role='dimension' type='ordinal' />
            <column caption='Order Hour Of Day' datatype='integer' name='[order_hour_of_day]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[order_id (order_products__prior.csv+)]' role='measure' type='quantitative' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_158189003816521736]' derivation='User' name='[usr:Calculation_158189003816521736:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_158189003817390089]' derivation='User' name='[usr:Calculation_158189003817390089:qk:2]' pivot='key' type='quantitative'>
              <table-calc level-break='[federated.1jvdhp01ik5ria1bh1cgi0done31].[product_name]' ordering-type='Field'>
                <order field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[order_hour_of_day]' />
                <order field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[product_name]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]'>
            <groupfilter function='member' level='[Order Dow &amp; Order Hour Of Day (group)]' member='&quot;Evening Hours&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]' included-values='in-range'>
            <min>100</min>
            <max>9227</max>
          </filter>
          <filter class='quantitative' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003817390089:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]</column>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003817390089:qk:2]</column>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]' />
              <text column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003816521736:qk]</rows>
        <cols>([federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_dow:ok] / ([federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_hour_of_day:ok] / [federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]))</cols>
      </table>
      <simple-id uuid='{515F9769-23A1-432C-A1E7-3A8DB0CF79ED}' />
    </worksheet>
    <worksheet name='Soham - Top Products per Group-Friday Rush Hours'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1jvdhp01ik5ria1bh1cgi0done31' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvdhp01ik5ria1bh1cgi0done31'>
            <column caption='Percentage of Total Orders' datatype='real' name='[Calculation_158189003816521736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([order_id (order_products__prior.csv+)])/SUM({ FIXED [product_name]:COUNT([order_id (order_products__prior.csv+)])})' />
            </column>
            <column caption='Rank - Percentage of Total Orders' datatype='integer' name='[Calculation_158189003817390089]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE([Calculation_158189003816521736])'>
                <table-calc ordering-field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[order_hour_of_day]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Order Dow &amp; Order Hour Of Day (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Order Dow &amp; Order Hour Of Day]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Early Birds&quot;'>
                  <value>(0,6)</value>
                  <value>(0,7)</value>
                  <value>(0,8)</value>
                  <value>(1,6)</value>
                  <value>(1,7)</value>
                  <value>(1,8)</value>
                  <value>(2,6)</value>
                  <value>(2,7)</value>
                  <value>(2,8)</value>
                  <value>(3,6)</value>
                  <value>(3,7)</value>
                  <value>(3,8)</value>
                  <value>(4,6)</value>
                  <value>(4,7)</value>
                  <value>(4,8)</value>
                  <value>(5,6)</value>
                  <value>(5,7)</value>
                  <value>(5,8)</value>
                  <value>(6,6)</value>
                  <value>(6,7)</value>
                  <value>(6,8)</value>
                </bin>
                <bin default-name='false' value='&quot;Evening Hours&quot;'>
                  <value>(0,16)</value>
                  <value>(0,17)</value>
                  <value>(0,18)</value>
                  <value>(1,16)</value>
                  <value>(1,17)</value>
                  <value>(1,18)</value>
                  <value>(2,16)</value>
                  <value>(2,17)</value>
                  <value>(2,18)</value>
                  <value>(3,16)</value>
                  <value>(3,17)</value>
                  <value>(3,18)</value>
                  <value>(4,16)</value>
                  <value>(4,17)</value>
                  <value>(4,18)</value>
                  <value>(5,16)</value>
                  <value>(5,17)</value>
                  <value>(5,18)</value>
                  <value>(6,16)</value>
                  <value>(6,17)</value>
                  <value>(6,18)</value>
                </bin>
                <bin default-name='false' value='&quot;Friday Rush Hours&quot;'>
                  <value>(6,13)</value>
                  <value>(6,14)</value>
                  <value>(6,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Late Night Hours&quot;'>
                  <value>(0,21)</value>
                  <value>(0,22)</value>
                  <value>(0,23)</value>
                  <value>(1,21)</value>
                  <value>(1,22)</value>
                  <value>(1,23)</value>
                  <value>(2,21)</value>
                  <value>(2,22)</value>
                  <value>(2,23)</value>
                  <value>(3,21)</value>
                  <value>(3,22)</value>
                  <value>(3,23)</value>
                  <value>(4,21)</value>
                  <value>(4,22)</value>
                  <value>(4,23)</value>
                  <value>(5,21)</value>
                  <value>(5,22)</value>
                  <value>(5,23)</value>
                  <value>(6,21)</value>
                  <value>(6,22)</value>
                  <value>(6,23)</value>
                </bin>
                <bin default-name='false' value='&quot;Monday-Thursday Rush Hours&quot;'>
                  <value>(2,10)</value>
                  <value>(2,11)</value>
                  <value>(2,15)</value>
                  <value>(3,10)</value>
                  <value>(3,11)</value>
                  <value>(3,15)</value>
                  <value>(4,10)</value>
                  <value>(4,11)</value>
                  <value>(4,15)</value>
                  <value>(5,10)</value>
                  <value>(5,11)</value>
                  <value>(5,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Weekend Busiest Hours&quot;'>
                  <value>(0,13)</value>
                  <value>(0,14)</value>
                  <value>(0,15)</value>
                  <value>(1,9)</value>
                  <value>(1,10)</value>
                  <value>(1,11)</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='order_products.csv' datatype='integer' name='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='order_products.csv' datatype='table' name='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' role='measure' type='quantitative' />
            <column-instance column='[order_dow]' derivation='None' name='[none:order_dow:ok]' pivot='key' type='ordinal' />
            <column-instance column='[order_hour_of_day]' derivation='None' name='[none:order_hour_of_day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Order Dow' datatype='integer' name='[order_dow]' role='dimension' type='ordinal' />
            <column caption='Order Hour Of Day' datatype='integer' name='[order_hour_of_day]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[order_id (order_products__prior.csv+)]' role='measure' type='quantitative' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_158189003816521736]' derivation='User' name='[usr:Calculation_158189003816521736:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_158189003817390089]' derivation='User' name='[usr:Calculation_158189003817390089:qk:2]' pivot='key' type='quantitative'>
              <table-calc level-break='[federated.1jvdhp01ik5ria1bh1cgi0done31].[product_name]' ordering-type='Field'>
                <order field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[order_hour_of_day]' />
                <order field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[product_name]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]'>
            <groupfilter function='member' level='[Order Dow &amp; Order Hour Of Day (group)]' member='&quot;Friday Rush Hours&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]' included-values='in-range'>
            <min>100</min>
            <max>9227</max>
          </filter>
          <filter class='quantitative' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003817390089:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]</column>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003817390089:qk:2]</column>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]' />
              <text column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003816521736:qk]</rows>
        <cols>([federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_dow:ok] / ([federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_hour_of_day:ok] / [federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]))</cols>
      </table>
      <simple-id uuid='{45715B7C-F975-44DD-9A3C-5A8DF39B6467}' />
    </worksheet>
    <worksheet name='Soham - Top Products per Group-Late Night Hours'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1jvdhp01ik5ria1bh1cgi0done31' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvdhp01ik5ria1bh1cgi0done31'>
            <column caption='Percentage of Total Orders' datatype='real' name='[Calculation_158189003816521736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([order_id (order_products__prior.csv+)])/SUM({ FIXED [product_name]:COUNT([order_id (order_products__prior.csv+)])})' />
            </column>
            <column caption='Rank - Percentage of Total Orders' datatype='integer' name='[Calculation_158189003817390089]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE([Calculation_158189003816521736])'>
                <table-calc ordering-field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[order_hour_of_day]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Order Dow &amp; Order Hour Of Day (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Order Dow &amp; Order Hour Of Day]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Early Birds&quot;'>
                  <value>(0,6)</value>
                  <value>(0,7)</value>
                  <value>(0,8)</value>
                  <value>(1,6)</value>
                  <value>(1,7)</value>
                  <value>(1,8)</value>
                  <value>(2,6)</value>
                  <value>(2,7)</value>
                  <value>(2,8)</value>
                  <value>(3,6)</value>
                  <value>(3,7)</value>
                  <value>(3,8)</value>
                  <value>(4,6)</value>
                  <value>(4,7)</value>
                  <value>(4,8)</value>
                  <value>(5,6)</value>
                  <value>(5,7)</value>
                  <value>(5,8)</value>
                  <value>(6,6)</value>
                  <value>(6,7)</value>
                  <value>(6,8)</value>
                </bin>
                <bin default-name='false' value='&quot;Evening Hours&quot;'>
                  <value>(0,16)</value>
                  <value>(0,17)</value>
                  <value>(0,18)</value>
                  <value>(1,16)</value>
                  <value>(1,17)</value>
                  <value>(1,18)</value>
                  <value>(2,16)</value>
                  <value>(2,17)</value>
                  <value>(2,18)</value>
                  <value>(3,16)</value>
                  <value>(3,17)</value>
                  <value>(3,18)</value>
                  <value>(4,16)</value>
                  <value>(4,17)</value>
                  <value>(4,18)</value>
                  <value>(5,16)</value>
                  <value>(5,17)</value>
                  <value>(5,18)</value>
                  <value>(6,16)</value>
                  <value>(6,17)</value>
                  <value>(6,18)</value>
                </bin>
                <bin default-name='false' value='&quot;Friday Rush Hours&quot;'>
                  <value>(6,13)</value>
                  <value>(6,14)</value>
                  <value>(6,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Late Night Hours&quot;'>
                  <value>(0,21)</value>
                  <value>(0,22)</value>
                  <value>(0,23)</value>
                  <value>(1,21)</value>
                  <value>(1,22)</value>
                  <value>(1,23)</value>
                  <value>(2,21)</value>
                  <value>(2,22)</value>
                  <value>(2,23)</value>
                  <value>(3,21)</value>
                  <value>(3,22)</value>
                  <value>(3,23)</value>
                  <value>(4,21)</value>
                  <value>(4,22)</value>
                  <value>(4,23)</value>
                  <value>(5,21)</value>
                  <value>(5,22)</value>
                  <value>(5,23)</value>
                  <value>(6,21)</value>
                  <value>(6,22)</value>
                  <value>(6,23)</value>
                </bin>
                <bin default-name='false' value='&quot;Monday-Thursday Rush Hours&quot;'>
                  <value>(2,10)</value>
                  <value>(2,11)</value>
                  <value>(2,15)</value>
                  <value>(3,10)</value>
                  <value>(3,11)</value>
                  <value>(3,15)</value>
                  <value>(4,10)</value>
                  <value>(4,11)</value>
                  <value>(4,15)</value>
                  <value>(5,10)</value>
                  <value>(5,11)</value>
                  <value>(5,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Weekend Busiest Hours&quot;'>
                  <value>(0,13)</value>
                  <value>(0,14)</value>
                  <value>(0,15)</value>
                  <value>(1,9)</value>
                  <value>(1,10)</value>
                  <value>(1,11)</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='order_products.csv' datatype='integer' name='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='order_products.csv' datatype='table' name='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' role='measure' type='quantitative' />
            <column-instance column='[order_dow]' derivation='None' name='[none:order_dow:ok]' pivot='key' type='ordinal' />
            <column-instance column='[order_hour_of_day]' derivation='None' name='[none:order_hour_of_day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Order Dow' datatype='integer' name='[order_dow]' role='dimension' type='ordinal' />
            <column caption='Order Hour Of Day' datatype='integer' name='[order_hour_of_day]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[order_id (order_products__prior.csv+)]' role='measure' type='quantitative' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_158189003816521736]' derivation='User' name='[usr:Calculation_158189003816521736:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_158189003817390089]' derivation='User' name='[usr:Calculation_158189003817390089:qk:2]' pivot='key' type='quantitative'>
              <table-calc level-break='[federated.1jvdhp01ik5ria1bh1cgi0done31].[product_name]' ordering-type='Field'>
                <order field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[order_hour_of_day]' />
                <order field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[product_name]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]'>
            <groupfilter function='member' level='[Order Dow &amp; Order Hour Of Day (group)]' member='&quot;Late Night Hours&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]' included-values='in-range'>
            <min>100</min>
            <max>9227</max>
          </filter>
          <filter class='quantitative' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003817390089:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]</column>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003817390089:qk:2]</column>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]' />
              <text column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003816521736:qk]</rows>
        <cols>([federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_dow:ok] / ([federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_hour_of_day:ok] / [federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]))</cols>
      </table>
      <simple-id uuid='{A9E2721B-69AD-437E-AD67-CDB93A5B6352}' />
    </worksheet>
    <worksheet name='Soham - Top Products per Group-Monday -Thursday Rush Hours'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1jvdhp01ik5ria1bh1cgi0done31' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvdhp01ik5ria1bh1cgi0done31'>
            <column caption='Percentage of Total Orders' datatype='real' name='[Calculation_158189003816521736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([order_id (order_products__prior.csv+)])/SUM({ FIXED [product_name]:COUNT([order_id (order_products__prior.csv+)])})' />
            </column>
            <column caption='Rank - Percentage of Total Orders' datatype='integer' name='[Calculation_158189003817390089]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE([Calculation_158189003816521736])'>
                <table-calc ordering-field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[order_hour_of_day]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Order Dow &amp; Order Hour Of Day (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Order Dow &amp; Order Hour Of Day]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Early Birds&quot;'>
                  <value>(0,6)</value>
                  <value>(0,7)</value>
                  <value>(0,8)</value>
                  <value>(1,6)</value>
                  <value>(1,7)</value>
                  <value>(1,8)</value>
                  <value>(2,6)</value>
                  <value>(2,7)</value>
                  <value>(2,8)</value>
                  <value>(3,6)</value>
                  <value>(3,7)</value>
                  <value>(3,8)</value>
                  <value>(4,6)</value>
                  <value>(4,7)</value>
                  <value>(4,8)</value>
                  <value>(5,6)</value>
                  <value>(5,7)</value>
                  <value>(5,8)</value>
                  <value>(6,6)</value>
                  <value>(6,7)</value>
                  <value>(6,8)</value>
                </bin>
                <bin default-name='false' value='&quot;Evening Hours&quot;'>
                  <value>(0,16)</value>
                  <value>(0,17)</value>
                  <value>(0,18)</value>
                  <value>(1,16)</value>
                  <value>(1,17)</value>
                  <value>(1,18)</value>
                  <value>(2,16)</value>
                  <value>(2,17)</value>
                  <value>(2,18)</value>
                  <value>(3,16)</value>
                  <value>(3,17)</value>
                  <value>(3,18)</value>
                  <value>(4,16)</value>
                  <value>(4,17)</value>
                  <value>(4,18)</value>
                  <value>(5,16)</value>
                  <value>(5,17)</value>
                  <value>(5,18)</value>
                  <value>(6,16)</value>
                  <value>(6,17)</value>
                  <value>(6,18)</value>
                </bin>
                <bin default-name='false' value='&quot;Friday Rush Hours&quot;'>
                  <value>(6,13)</value>
                  <value>(6,14)</value>
                  <value>(6,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Late Night Hours&quot;'>
                  <value>(0,21)</value>
                  <value>(0,22)</value>
                  <value>(0,23)</value>
                  <value>(1,21)</value>
                  <value>(1,22)</value>
                  <value>(1,23)</value>
                  <value>(2,21)</value>
                  <value>(2,22)</value>
                  <value>(2,23)</value>
                  <value>(3,21)</value>
                  <value>(3,22)</value>
                  <value>(3,23)</value>
                  <value>(4,21)</value>
                  <value>(4,22)</value>
                  <value>(4,23)</value>
                  <value>(5,21)</value>
                  <value>(5,22)</value>
                  <value>(5,23)</value>
                  <value>(6,21)</value>
                  <value>(6,22)</value>
                  <value>(6,23)</value>
                </bin>
                <bin default-name='false' value='&quot;Monday-Thursday Rush Hours&quot;'>
                  <value>(2,10)</value>
                  <value>(2,11)</value>
                  <value>(2,15)</value>
                  <value>(3,10)</value>
                  <value>(3,11)</value>
                  <value>(3,15)</value>
                  <value>(4,10)</value>
                  <value>(4,11)</value>
                  <value>(4,15)</value>
                  <value>(5,10)</value>
                  <value>(5,11)</value>
                  <value>(5,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Weekend Busiest Hours&quot;'>
                  <value>(0,13)</value>
                  <value>(0,14)</value>
                  <value>(0,15)</value>
                  <value>(1,9)</value>
                  <value>(1,10)</value>
                  <value>(1,11)</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='order_products.csv' datatype='integer' name='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='order_products.csv' datatype='table' name='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' role='measure' type='quantitative' />
            <column-instance column='[order_dow]' derivation='None' name='[none:order_dow:ok]' pivot='key' type='ordinal' />
            <column-instance column='[order_hour_of_day]' derivation='None' name='[none:order_hour_of_day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Order Dow' datatype='integer' name='[order_dow]' role='dimension' type='ordinal' />
            <column caption='Order Hour Of Day' datatype='integer' name='[order_hour_of_day]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[order_id (order_products__prior.csv+)]' role='measure' type='quantitative' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_158189003816521736]' derivation='User' name='[usr:Calculation_158189003816521736:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_158189003817390089]' derivation='User' name='[usr:Calculation_158189003817390089:qk:2]' pivot='key' type='quantitative'>
              <table-calc level-break='[federated.1jvdhp01ik5ria1bh1cgi0done31].[product_name]' ordering-type='Field'>
                <order field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[order_hour_of_day]' />
                <order field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[product_name]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]'>
            <groupfilter function='member' level='[Order Dow &amp; Order Hour Of Day (group)]' member='&quot;Monday-Thursday Rush Hours&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]' included-values='in-range'>
            <min>100</min>
            <max>9227</max>
          </filter>
          <filter class='quantitative' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003817390089:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]</column>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003817390089:qk:2]</column>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]' />
              <text column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003816521736:qk]</rows>
        <cols>([federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_dow:ok] / ([federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_hour_of_day:ok] / [federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]))</cols>
      </table>
      <simple-id uuid='{9290D758-011A-472C-B86B-EEA2CD9BFF0E}' />
    </worksheet>
    <worksheet name='Soham - Top Products per Group-Weekend Busiest Hours'>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1jvdhp01ik5ria1bh1cgi0done31' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvdhp01ik5ria1bh1cgi0done31'>
            <column caption='Percentage of Total Orders' datatype='real' name='[Calculation_158189003816521736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([order_id (order_products__prior.csv+)])/SUM({ FIXED [product_name]:COUNT([order_id (order_products__prior.csv+)])})' />
            </column>
            <column caption='Rank - Percentage of Total Orders' datatype='integer' name='[Calculation_158189003817390089]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE([Calculation_158189003816521736])'>
                <table-calc ordering-field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[order_hour_of_day]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Order Dow &amp; Order Hour Of Day (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Order Dow &amp; Order Hour Of Day]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Early Birds&quot;'>
                  <value>(0,6)</value>
                  <value>(0,7)</value>
                  <value>(0,8)</value>
                  <value>(1,6)</value>
                  <value>(1,7)</value>
                  <value>(1,8)</value>
                  <value>(2,6)</value>
                  <value>(2,7)</value>
                  <value>(2,8)</value>
                  <value>(3,6)</value>
                  <value>(3,7)</value>
                  <value>(3,8)</value>
                  <value>(4,6)</value>
                  <value>(4,7)</value>
                  <value>(4,8)</value>
                  <value>(5,6)</value>
                  <value>(5,7)</value>
                  <value>(5,8)</value>
                  <value>(6,6)</value>
                  <value>(6,7)</value>
                  <value>(6,8)</value>
                </bin>
                <bin default-name='false' value='&quot;Evening Hours&quot;'>
                  <value>(0,16)</value>
                  <value>(0,17)</value>
                  <value>(0,18)</value>
                  <value>(1,16)</value>
                  <value>(1,17)</value>
                  <value>(1,18)</value>
                  <value>(2,16)</value>
                  <value>(2,17)</value>
                  <value>(2,18)</value>
                  <value>(3,16)</value>
                  <value>(3,17)</value>
                  <value>(3,18)</value>
                  <value>(4,16)</value>
                  <value>(4,17)</value>
                  <value>(4,18)</value>
                  <value>(5,16)</value>
                  <value>(5,17)</value>
                  <value>(5,18)</value>
                  <value>(6,16)</value>
                  <value>(6,17)</value>
                  <value>(6,18)</value>
                </bin>
                <bin default-name='false' value='&quot;Friday Rush Hours&quot;'>
                  <value>(6,13)</value>
                  <value>(6,14)</value>
                  <value>(6,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Late Night Hours&quot;'>
                  <value>(0,21)</value>
                  <value>(0,22)</value>
                  <value>(0,23)</value>
                  <value>(1,21)</value>
                  <value>(1,22)</value>
                  <value>(1,23)</value>
                  <value>(2,21)</value>
                  <value>(2,22)</value>
                  <value>(2,23)</value>
                  <value>(3,21)</value>
                  <value>(3,22)</value>
                  <value>(3,23)</value>
                  <value>(4,21)</value>
                  <value>(4,22)</value>
                  <value>(4,23)</value>
                  <value>(5,21)</value>
                  <value>(5,22)</value>
                  <value>(5,23)</value>
                  <value>(6,21)</value>
                  <value>(6,22)</value>
                  <value>(6,23)</value>
                </bin>
                <bin default-name='false' value='&quot;Monday-Thursday Rush Hours&quot;'>
                  <value>(2,10)</value>
                  <value>(2,11)</value>
                  <value>(2,15)</value>
                  <value>(3,10)</value>
                  <value>(3,11)</value>
                  <value>(3,15)</value>
                  <value>(4,10)</value>
                  <value>(4,11)</value>
                  <value>(4,15)</value>
                  <value>(5,10)</value>
                  <value>(5,11)</value>
                  <value>(5,15)</value>
                </bin>
                <bin default-name='false' value='&quot;Weekend Busiest Hours&quot;'>
                  <value>(0,13)</value>
                  <value>(0,14)</value>
                  <value>(0,15)</value>
                  <value>(1,9)</value>
                  <value>(1,10)</value>
                  <value>(1,11)</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='order_products.csv' datatype='integer' name='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='order_products.csv' datatype='table' name='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' role='measure' type='quantitative' />
            <column-instance column='[order_dow]' derivation='None' name='[none:order_dow:ok]' pivot='key' type='ordinal' />
            <column-instance column='[order_hour_of_day]' derivation='None' name='[none:order_hour_of_day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Order Dow' datatype='integer' name='[order_dow]' role='dimension' type='ordinal' />
            <column caption='Order Hour Of Day' datatype='integer' name='[order_hour_of_day]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[order_id (order_products__prior.csv+)]' role='measure' type='quantitative' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_158189003816521736]' derivation='User' name='[usr:Calculation_158189003816521736:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_158189003817390089]' derivation='User' name='[usr:Calculation_158189003817390089:qk:2]' pivot='key' type='quantitative'>
              <table-calc level-break='[federated.1jvdhp01ik5ria1bh1cgi0done31].[product_name]' ordering-type='Field'>
                <order field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[order_hour_of_day]' />
                <order field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[product_name]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]'>
            <groupfilter function='member' level='[Order Dow &amp; Order Hour Of Day (group)]' member='&quot;Weekend Busiest Hours&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]' included-values='in-range'>
            <min>100</min>
            <max>9227</max>
          </filter>
          <filter class='quantitative' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003817390089:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]</column>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003817390089:qk:2]</column>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]' />
              <text column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003816521736:qk]</rows>
        <cols>([federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_dow:ok] / ([federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_hour_of_day:ok] / [federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]))</cols>
      </table>
      <simple-id uuid='{86CBCCC3-504F-4ACB-B45A-B6A384C16099}' />
    </worksheet>
    <worksheet name='Soham - Treemap of Aisles and Products'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Treemap of Aisles and Products</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='orders+' name='federated.1jvdhp01ik5ria1bh1cgi0done31' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvdhp01ik5ria1bh1cgi0done31'>
            <column caption='Rank' datatype='integer' name='[Calculation_158189003747479556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE(COUNT([__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='order_products.csv' datatype='integer' name='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='order_products.csv' datatype='table' name='[__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B]' role='measure' type='quantitative' />
            <column caption='Aisle' datatype='string' name='[aisle]' role='dimension' type='nominal' />
            <column-instance column='[aisle]' derivation='None' name='[none:aisle:nk]' pivot='key' type='nominal' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_158189003747479556]' derivation='User' name='[usr:Calculation_158189003747479556:qk:4]' pivot='key' type='quantitative'>
              <table-calc level-break='[federated.1jvdhp01ik5ria1bh1cgi0done31].[product_name]' ordering-type='Field'>
                <order field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[aisle]' />
                <order field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[product_name]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:aisle:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:aisle:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003747479556:qk:4]' included-values='in-range'>
            <min>1</min>
            <max>15</max>
          </filter>
          <slices>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:aisle:nk]</column>
            <column>[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003747479556:qk:4]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]' />
              <color column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:aisle:nk]' />
              <text column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:aisle:nk]' />
              <text column='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2C287A9F-EFDC-418B-9A11-BB1E8D27B74C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='50900' x='800' y='1000'>
              <zone h='42500' id='3' name='Soham - Busiest Hours' w='50900' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='31000' id='10' name='Soham - Days Since Prior Order' w='50900' x='800' y='43500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24500' id='12' name='Soham - Best Selling Products' w='50900' x='800' y='74500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='475' h='98000' id='16' is-fixed='true' type-v2='layout-basic' w='47500' x='51700' y='1000'>
              <zone h='63250' id='6' param='vert' type-v2='layout-flow' w='47500' x='51700' y='1000'>
                <zone h='28312' id='9' name='Soham - Busiest Days of the Week' w='47500' x='51700' y='1000'>
                  <layout-cache cell-count-w='7' minheight='195' non-cell-size-w='78' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='34937' id='11' name='Soham - Number of Items Purchased per Order' w='47500' x='51700' y='29312'>
                  <layout-cache minheight='248' minwidth='178' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='34750' id='17' param='vert' type-v2='layout-flow' w='47500' x='51700' y='64250'>
                <zone fixed-size='279' h='34750' id='14' is-fixed='true' name='Soham - Treemap of Aisles and Products' w='47500' x='51700' y='64250'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='24' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='42500' id='3' is-fixed='true' name='Soham - Busiest Hours' w='50900' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='218' h='28312' id='9' is-fixed='true' name='Soham - Busiest Days of the Week' w='47500' x='51700' y='1000'>
                  <layout-cache cell-count-w='7' minheight='195' non-cell-size-w='78' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='272' h='34937' id='11' is-fixed='true' name='Soham - Number of Items Purchased per Order' w='47500' x='51700' y='29312'>
                  <layout-cache minheight='248' minwidth='178' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='240' h='31000' id='10' is-fixed='true' name='Soham - Days Since Prior Order' w='50900' x='800' y='43500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='270' h='34750' id='14' is-fixed='true' name='Soham - Treemap of Aisles and Products' w='47500' x='51700' y='64250'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='24500' id='12' is-fixed='true' name='Soham - Best Selling Products' w='50900' x='800' y='74500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{87181139-8A81-4CF1-B7F4-ED782D03CE09}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='23' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='20' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
                  <zone h='38125' id='3' name='Soham - Top Products per Group-Friday Rush Hours' w='49200' x='800' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='38125' id='11' name='Soham - Top Products per Group-Early Birds' w='49200' x='50000' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='31500' id='14' name='Soham - Top Products per Group-Evening Hours' w='49200' x='800' y='39125'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='31500' id='17' name='Soham - Top Products per Group-Late Night Hours' w='49200' x='50000' y='39125'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='28375' id='18' name='Soham - Top Products per Group-Monday -Thursday Rush Hours' w='49200' x='800' y='70625'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='28375' id='21' name='Soham - Top Products per Group-Weekend Busiest Hours' w='49200' x='50000' y='70625'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='30' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='38125' id='3' is-fixed='true' name='Soham - Top Products per Group-Friday Rush Hours' w='49200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38125' id='11' is-fixed='true' name='Soham - Top Products per Group-Early Birds' w='49200' x='50000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='244' h='31500' id='14' is-fixed='true' name='Soham - Top Products per Group-Evening Hours' w='49200' x='800' y='39125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='244' h='31500' id='17' is-fixed='true' name='Soham - Top Products per Group-Late Night Hours' w='49200' x='50000' y='39125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='219' h='28375' id='18' is-fixed='true' name='Soham - Top Products per Group-Monday -Thursday Rush Hours' w='49200' x='800' y='70625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='219' h='28375' id='21' is-fixed='true' name='Soham - Top Products per Group-Weekend Busiest Hours' w='49200' x='50000' y='70625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{ED9A7B44-9619-49E5-A3A7-6103746228F6}' />
    </dashboard>
    <dashboard name='Story - Instacart' type='storyboard'>
      <style>
        <style-rule element='story-description'>
          <format attr='font-size' value='10' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='font-size' value='11' />
          <format attr='background-color' value='#76b7b2' />
        </style-rule>
        <style-rule element='story-title'>
          <format attr='font-size' value='16' />
        </style-rule>
      </style>
      <size maxheight='864' maxwidth='1016' minheight='864' minwidth='1016' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98148' id='7' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='926'>
            <zone h='5208' id='8' type-v2='title' w='98426' x='787' y='926'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92940' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='6134'>
              <zone h='11690' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='6134' />
              <zone h='81250' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='17824'>
                <flipboard active-id='6' nav-type='caption' show-nav-arrows='true'>
                  <story-points>
                    <story-point caption='Orders catered each day of a week' captured-sheet='Soham - Busiest Days of the Week' id='3' />
                    <story-point caption='Busiest hours during the day are..' captured-sheet='Soham - Busiest Hours' id='1'>
                      <capturedDeltas>
                        <worksheet name='Soham - Busiest Hours'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:orders.csv_27573D3D4F614FE9835144F6593D6CCC:qk]' field-type='quantitative' max='57252' min='1932' range-type='fixed' scope='rows' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Best sellers are..' captured-sheet='Soham - Best Selling Products' id='2'>
                      <capturedDeltas>
                        <worksheet name='Soham - Best Selling Products'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <format attr='title' class='0' field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]' scope='cols' value='Number of Items Sold' />
                            </style-rule>
                          </style>
                          <selection-collection>
                            <node-selection select-tuples='false'>
                              <oriented-node-reference orientation='horizontal'>
                                <node-reference>
                                  <axis>[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:order_products__prior.csv_1FDBECA729814165AFD95804AF0A171B:qk]</axis>
                                </node-reference>
                                <page-reference />
                              </oriented-node-reference>
                            </node-selection>
                          </selection-collection>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Items bought typically per order' captured-sheet='Soham - Number of Items Purchased per Order' id='4' />
                    <story-point caption='When will customer reorder?' captured-sheet='Soham - Days Since Prior Order' id='5' />
                    <story-point caption='Fresh aisle is the winner' captured-sheet='Soham - Treemap of Aisles and Products' id='6' />
                  </story-points>
                </flipboard>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' h='3472' hidden='true' id='9' story-point-id='3' type-v2='text' w='24213' x='98' y='97222'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Cambria' fontsize='15'>Data source: Instacart.</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{16B6C1D2-E44B-4E29-9FFE-3AACC640FAFB}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Soham - Busiest Days of the Week'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6487E131-C4E0-4B86-875C-20DAAFEAD7A6}' />
    </window>
    <window class='worksheet' name='Soham - Busiest Hours'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvdhp01ik5ria1bh1cgi0done31].[__tableau_internal_object_id__].[cnt:orders.csv_27573D3D4F614FE9835144F6593D6CCC:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_dow:ok]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_hour_of_day:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{41CAF149-CF5C-45BF-8341-8E5A4A15DC91}' />
    </window>
    <window class='worksheet' name='Soham - Top 10 Products in the Busiest Hours'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_hour_of_day:ok]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D7D685DE-31AC-4740-BDFC-26A84CB5CD76}' />
    </window>
    <window class='worksheet' name='Soham - Days Since Prior Order'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1jvdhp01ik5ria1bh1cgi0done31].[cnt:days_since_prior_order:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{BA22834D-234D-4273-A825-0388CF0C2BF6}' />
    </window>
    <window class='worksheet' name='Soham - Best Selling Products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_number:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_number:ok]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{22D32212-9262-4E12-A90C-91E4D9FCD0DE}' />
    </window>
    <window class='worksheet' name='Soham - Top 10 Reordered Products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003742556162:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{89E77CBC-75F3-4276-96BE-DFC63ADE38DA}' />
    </window>
    <window class='worksheet' name='Soham - Number of Items Purchased per Order'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{AC0AFCFB-28F3-4E66-B8BE-2272F8784DC6}' />
    </window>
    <window class='worksheet' name='Soham - Treemap of Aisles and Products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:aisle:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:aisle:nk]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{909C1BCF-C75A-4320-B9BD-3B7130BB3B23}' />
    </window>
    <window class='worksheet' name='Soham - Number of Products Sold per Department'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:department:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:department:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{10945C1E-7F06-4656-8DC0-2207E28E96F2}' />
    </window>
    <window class='worksheet' name='Soham - Busiest Hours - Rank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003765882887:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_dow:ok]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_hour_of_day:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{76005F73-FF84-4D92-AD81-B9C719DB8ACC}' />
    </window>
    <window class='worksheet' name='Soham - Busiest Hours - Groups'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_dow:ok]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_hour_of_day:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{254A6247-C1E6-4D6E-B696-F81D4F7840AB}' />
    </window>
    <window class='worksheet' name='Soham - Top Products per Group-Friday Rush Hours'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]' type='filter' />
            <card param='[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003817390089:qk:2]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_dow:ok]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_hour_of_day:ok]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{840F8363-3667-428D-87D8-B138ED6F6450}' />
    </window>
    <window class='worksheet' name='Soham - Top Products per Group-Early Birds'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]' type='filter' />
            <card param='[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003817390089:qk:2]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_dow:ok]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_hour_of_day:ok]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{651DE669-3553-48BF-80AA-06948796FBBD}' />
    </window>
    <window class='worksheet' name='Soham - Top Products per Group-Evening Hours'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]' type='filter' />
            <card param='[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003817390089:qk:2]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_dow:ok]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_hour_of_day:ok]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F48C8722-E808-42C2-B7AC-450F4E3E647B}' />
    </window>
    <window class='worksheet' name='Soham - Top Products per Group-Late Night Hours'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]' type='filter' />
            <card param='[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003817390089:qk:2]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_dow:ok]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_hour_of_day:ok]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{05D176F0-D232-4D27-9121-473EC949ABE4}' />
    </window>
    <window class='worksheet' name='Soham - Top Products per Group-Monday -Thursday Rush Hours'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]' type='filter' />
            <card param='[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003817390089:qk:2]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_dow:ok]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_hour_of_day:ok]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E9C4E6E4-9F6B-4390-AC0E-026206BCF447}' />
    </window>
    <window class='worksheet' name='Soham - Top Products per Group-Weekend Busiest Hours'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]' type='filter' />
            <card param='[federated.1jvdhp01ik5ria1bh1cgi0done31].[usr:Calculation_158189003817390089:qk:2]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[Order Dow &amp; Order Hour Of Day (group)]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_dow:ok]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:order_hour_of_day:ok]</field>
            <field>[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{21790516-AAD9-4B72-9C34-2C39C75A6CF0}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Soham - Best Selling Products' />
        <viewpoint name='Soham - Busiest Days of the Week'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Soham - Busiest Hours'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Soham - Days Since Prior Order'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Soham - Number of Items Purchased per Order'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Soham - Treemap of Aisles and Products' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{B2C5B778-A10B-4B9E-9BFB-D1338DA6DE3F}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Soham - Top Products per Group-Early Birds'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Soham - Top Products per Group-Evening Hours'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Soham - Top Products per Group-Friday Rush Hours'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Soham - Top Products per Group-Late Night Hours'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Soham - Top Products per Group-Monday -Thursday Rush Hours'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Soham - Top Products per Group-Weekend Busiest Hours'>
          <zoom type='entire-view' />
          <highlight field='[federated.1jvdhp01ik5ria1bh1cgi0done31].[none:product_name:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C52D0446-5C2C-4AEB-A53E-3FEC08491A10}' />
    </window>
    <window class='dashboard' maximized='true' name='Story - Instacart'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{8938B062-FA24-4B85-84EA-023FF6E35B29}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Soham - Best Selling Products' width='192'>
      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
      GR3sI+h1sLu5gaVthL5WF2VpnKDgxW+pYfG9SIoRmbo1y87mBmVrgJuTfZRyXuyiQMvgIBI2
      xi4N0Nrqo7q7SU5sYaK/nYLHgYhI32A/Nitsb+8zePkK589ObvIp0TSDnpEvVigrekNkaaqK
      3KijTRsoS9c0REki6HVgs/x5c1/TDPqJ4bRb8Lodf/rGN+Bz8AN8KrxWAUzToJjPg2zD7XS8
      VXlzVakhyPVanH+Ua6IoCjabDV1VMUUJ+Qc1b2q1GjablVpNxWZ7sy/dNA1KhQKGaMHjcrxs
      MzdNqjUFm932J9N//9PcPv/nHzbO84g/3SdM3uwclncn63/6b/8Kzy/mrf94ee2I7Dx/Skaz
      Y1aztA5MMdL7+lo7P4dSKSI6Asg/PInR1Fmae8bUrTscrC7RdfEaAecfFeDp/Dxfzk4z/2yd
      2XvX36ido40FjksiFqWIu/cSEwM/TKs0KZZK2Ox/eqdfUzTShcqbPt5Hh9Hc6b6W1yiAQjxn
      cvf+Ncxanu+W9nFVD9g8VegfHCJ9tEVV09HsndwY9rG8vociWLh17TKPvvkDVruTlv5J3NUQ
      jsFbbMz9gaImMT59hzaPzKULXayurmBztuMWyzz55jkVVefi9O2XepGP7vNkLYRoikxdGeKk
      IBPQjwgV2hj11zDahuj2OThKlbl77z6CUebbxxscV8NsnJTRNY3Z2dvsHh7hkqp8N7eJIAlc
      vj7L5tP/iGT3Y9qD3Lsx+Y6GusmHyGs2gyYIEgLUw5Ax0VWN/kvX6HGDo3OIL+/MYBFAVRVM
      BNLJGOWqRtfQJe59cQNDK6NrKqaSRLEOcP/+fdo8FkDA1zlILhZldKSfwukux3kNAYN8vvhS
      L9b3Y/zmt7/h7pU2wkUb1VSUouLCKuRIlioEnGezuiBQP/VHBNME2crUjS+4NNyJWtNQNY3o
      4SETs7/hi2uXOI2c4mnt4e69L3HKTSPo585rFMCKz1ZjffeQ9bUVAm3dSLIFl8OBxW4jG4sS
      Pj6mXFNJxmN09A3idlh5rTHJ4scoRQiHj8iXtfo1QcLm9eKQBOy+NoJeLxeGR2gLvJyy2Buw
      sbZ9wOZenPa2IBY1T0V20G1ViCoO7HK9650uieWtfTZXVnB3dL72If2tfkLbOxwchnD73rwC
      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
    </thumbnail>
    <thumbnail height='192' name='Soham - Busiest Days of the Week' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Soham - Busiest Hours' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2deXAk133fP697LgwGM7h2F4td7C6Xu8tTpMjQ1GFbiiq2HFfFcWRXEud0
      VSqxXf4nURxXUrHLZpVTcaWUSLIcy1FKlh1dsWLZliiKkiiJormkSIq7Sy73BLC4BjcwmPvs
      6+WPOTCDYxcDDNAA5n1qAez0dL/v73X3b3r69bd/LaSUEoWiTdHcDkChcJOWJ0Amk2l1kwrF
      rtHyBFDfqFqFZPj6W7x88RXyhlObahlZbo1MrJvbzCzy/Hde5O0bI9xrCwxfe4uM4SCl5ObV
      S1x89XWKpl17f2LkFlnDWrfc6K0bFG2bG9dv3rX9dGyOixdf5k50kdmJ29wenyEXm+bb33uJ
      68MT94xvL/G4HYBiE4wMt6JxfvYnLvD9b3+LlWyeh86fYSWxTFF2sBC9gzfUS3pxjIH7383D
      /TZa+CSJ6C0uFdJkk3ECgQ46e4+xnEgQ1AXve+/TgGQxmeEBn4ZtpbgTTfOBJwb43g9eJB/P
      cHLoKCM3b/GUbbM0v8Tx/ghv3pjkp/7uzzI5coNYocTY8CT51BKJvE1Pp4fT588zOTLBrak5
      PvRTP8M7r/2In/m5n+f5Z79OPj7DIx/4CMXkIqGBc0wPXyLSIbh98yaRcBfHzz/I7NQS733q
      EVdWszoH2K9oHhzLIJdJ0xHw0nHkDHZ6gQuPvAu9EOPSjUn8gQAFW+OJRy5UFpIYps1EdIYn
      Hz1FIm9y8aVXMDNLmPgByC5N0tl/HwBCeLBtg2w2j98r6T1xgUQsxn1DA4zcuErO0tDsAj1D
      DzLYE0Tz+Dh3/gKdAS9zsRT9PofxmVmy2TTxlRU6j57l1NEwfo9GvljEETrHjp/kvqET5eik
      g2U7jA7fIrWygLdvkOe+9CUGz551Yw2X10GrR4HS6TThcLiVTbYtS7NTTC9nePyhM8wnDI52
      adwYmeDIsRPkVmbxdB3FrzsMDQ1hF1L88MoNzpy9QF+n4MZIlMfe/Th3hm/RGw7i7z5Ob1eA
      S6+9wsNPvZ+gVwMpmZ+eYDFV4sH7B0nmoMtb4tb4HBfOnWF4eJT7Tg9REh2cOBJhYWaavsET
      LMzO4dcsFlIGZ46FmZhdpL+nF8cbYmigB6OQ4dr125y+8AhWdoW+gSGcfIwfvTPKuQsPoZUS
      LMazDA6d4qUXX+QXfuEfoAnhyjo+dAlQLBYJBAJKfxPy+TzBYHBXtA3DQNd1dF3f0vxmMUfB
      1gh3driiD/vsK5BjlZiantvRibRhGNteVkpJKpXa9vI71beNImPjk9i72P+77fyZRIyJ6PbX
      v2VZTS3rDXQ27PyOVSKe3P4oommaTce+rxJgbHSMSIfN5PzOdsLtkknEGB6bdEUbIJvLc6zH
      w3g04Yq+5gvgKSy5og2SibFRZub2Vn9fJQAeL5GebuxC0RX5cO8Rwp1+V7QBPJokulTk7FCP
      K/rCMUnkTFe084kl5mJpFhYX9lR3XyVAf6STa9cnGDh5xBX9+NI8iXiClVTWFf2FhQWEY5LN
      l1zRT8TjaF6fK9rBnmP85PvfwyMPnNtT3dpJcCaTaclFrN08yVL6+1u/WCzi9XqbOgl1W792
      Iayrq6tlgbg9DKr03dH3eDz4fD48Hneur+q6jt/vb0p/X30FUij2GpUAirZGJYCirVEJoGhr
      VAIo2hqVAIq2RiUA4DgO+VLB7TAULtBUAlhGgZHhYeLpHLPRCSan5ykUCkjHIpdzx77QCiaW
      pvnpZ/6p22EoXKCpBEgsRCmJDro6A0zPzNLTHWFhYZ7xkWHwencrRoVi12jqkl3v4Fn82RQj
      o5M89vi7GRkdxeeV5IqC+7w6tm1j2zaWtf5+0r1iO/q2bYOkJXEfxP4fBm0of5W1bfveM9bR
      VALk0kmm5xbpOzZAdCqKvzNMXyTI2Q4vS/EUA30RdF1v2aXwjz/3v/mlH/95BnuObXmZ7ejr
      ug6ClsTdyv4fNP2qtlv6mqY13f+mIg33HuGR3rJTc+BIf8N7A800tEWef+v7/MzjH2Sg+wia
      UOfritazL/eqWCbOl179KwA+9tz/4g+//TmXI1IcVvZlAiynV/jTl77idhiKNmBfJoBCsVeo
      BFC0NSoBFG2NSgBFW9P2tUE//8Ov8uadt90OQ+ES++4IMLY0yeji+urHu0XBKJAzyka4X/v8
      f+L2/J0901a4z746Arwzc4vnr36P0YVJV/TnkguUrO1XdlMcPPZVAvzu1z5Gf6jX7TAUbURT
      CWAU0oyOz3D85GmK6SW0QDfBgE6n30OmCN1h9+rhKBTboakESC7NU7A1OnwmSwUPIrdI1qNh
      FA3OPfQIUkqklDiOc+/GNqG+Npes/d16m03ry0bRnce/s+V3ipv6rdj+rYihGf2mEqB/6Dx9
      gyVu3b6FLziIho5llSgaNpq2ugK2W2FO1n5LJBKkKP9fbv3RS83qS+p3/uaX36l+q3FTv7rz
      aZo7YyuO4zTd/+bs0Kk403OLDJ5+kPTyNFpnN31BL+HOACuJDEd7wzVL6nYQgBACCQhEeQKC
      WHaFr139Fr/45N+7ZxvN6gshoPJwBiGaX36n+q3GTf2qtpv6zfa/qQTo6unn4Z6yDbo3/EDD
      e0d38dx1Mb3MVy59fUsJoFA0w767DqBQ7CX7Yhg0nkvy1SvPuh2Gog3ZF0eATDHLc++84HYY
      ijZkXySAQuEWKgEUbY1KgDX8cPwNLt75odthKPaIfXESvJ+4vTBKohBnPrWABH7qwb9NX6fy
      Jx1WVAJsQCKf5Llr38HBwaPpXDh6jnedeMTtsBS7gPoKdA/emLzMlemrboeh2CVUAijamia/
      AknmJkfx950hNj2MN9RLdyhAKKCTNnz0dys7tOJg0VQClHIpUqkU/qBBOpWmv6uP5cVZJovw
      7icew7btbRUodRy74gGtuD5lnRu0zmG6lXab1ZeOrNmhZcUaXXYTyobXW21zO/1vJW7qV4sj
      i4q5cK+p9r0Z/aYSYHlpmVKpQGZ5mUff/RTjoyMEQkGCdoGS6RDwaAghmrbDVucX1d+i7AaV
      ZXsoCIFga+02qy+01ZUlKnoC0fB6NjXLZ1//HL/y/n/dcv1W46Z+1Y15kPSbSoCT953n+OAg
      ecdLbCFK38AJuoJegh0B0tkcHZEuhBDb+ASo7nLlnU7Wptb9FWyp3W3pr52/KliJJFvKsZCd
      2z39FuKmflX7IPW/6WFQ3d9JF9B137mG6d0R9YAMxcFDjQIp2hqVAIq2RiWAoq1RCaBoa1QC
      KNoalQCKtkYlgKKtUQmgaGtUAijaGtdviHlt6iI35m+5HYaiTWnaDj1x+yodAw+Qmh1FdESI
      dPrp9GkURIgj27BDJ/IrLGcXm15OoWgFzdUGTcawpSCfi6N1DqKZSVZiCaIljaeefKxmh7Us
      a8ttOhXrc70dulbgdI0deivtNqtfs0PLRju0rCvKW52+G/qtxk19t/u+HSt4UwmQyebJZ1IU
      nSBBmUMIi45gmA5vkXTeIBL0oes6Hs/Wm9Uq9mPBanFcUXV+Vu3JlZ9vjvw1Hzr7YcKByKbt
      NasvtEpxXFFnh67GJOSqu1CILbXbrH6rcVO/qu2WfrUwbjP6TUU6cPI0RwcGMKSHUiaO8Hfh
      84Df56NQKDUdcLO8Hr3Ie4Z+/K4JcBApWSVm01HO9p53O5S2o+lRIM3jJ+DVifQeIdwZIOAP
      IIRGMNixG/G1BfFCjD+5/Gm3w2hL1DCooq1RCaBoa1QC7CM+99anmc/Muh1GW6ESYB+xmJ3H
      sNcPJhStInOZGRciOvy4fiVYsTkr+WVenX6JpdwCiWKc33z/77od0qFDJcA+5jNXPklfx5GG
      J1kqWov6CtQEn7nySeKFlV3XSRYTvDj57V3XUagjQFMs5RexndZe6h9PjhJNTjZMy5oZLi+8
      3lIdxcaoI4DLTCbHGInfdDWGRDHOV4e/tOF7by2+SbqU2uOI9g51BNhn/M309/a8tKBhlxhP
      jmz43sXp79Mb6CPsP1z2kypNPyl+amaOQLiP5MIk3cdO4dMcgl6w/H0cVdWhd4xhl9CkOwfm
      O4lhTnQN0eFp3I7LhUUCngDHOgddiWs32TQB8vk8mWSc7qOD+D3lDdIR6kKaBdB0Av4Ospks
      XgrMlzR+7MmhXbdDS+Q9299NOzRSYjut1Xeks1oRu+GHVX0Aya7ZsW3bRkrJN8f/ko/c/08Y
      DA3V3pNIri1dYSm3wIdP/1zLtQG+G32O+yMXOBu50PSy9bTUDv3m6y8STxQ58+ATPPHI/QDk
      Mmk6I33kUnE6OsMkUllCPWEinQ5LySxHu0O7aocWiHu2v5t2aIRA11qrrwmt1r5o+GF1PSBB
      sGt2bF3X163flcIyf3rj0/jw1ypO36vd7dqh46UYJ5xTO7ZRt9QObRQdfuKDH8Tj76pN6+zq
      Rvd14A90YJklhk570URZ2HacHQWv2D8UrAJ5KwcuX39wpEOqlKAn0Ldr7W/6ZTMZm+cHL10k
      ky/Wpmm6TjAYRNcEfn8Ar0evfXp4dH1XgtxNvjLyp8xmo26Hse+4svQ6fzPzwp5q2o5FyS42
      TMubOT5z7RP85egXmEqPtV5T2psfAZ586mk8keOEg4GWC+8XskYaq8Xj+gcdx6VP/RvxtxnP
      jPCL5/45ADPZqdqHU8bMYDrmruhumgDjY8P4u1OEeod4snIOoDj8vDz7wvoHhrjAYn6OsdTw
      ruts+BUol0kxMHia5ViGc2eHNppFoTgUbJgAy/MzXLk+TG+Xh7HJ+b2OSdHmfGPy/zGRHt0T
      rQ0T4MyFRzh78hj5oklfX/eeBKK4N5ZjVp5g2TomM3cYTe2PwmSOtBlPD1Owclhyb87NNh8F
      SmV44OHH6O1SN7vvFz43/AckjXhL21zIzzCbm2xpm9vFdEyenfzzPdXcMAGktOnqDHBnbIKS
      qUZJFIeXDRPg8msv44sM4KdAIp3f65gUbYLtWPzJ8CewHfceLL7JEQCCoRABnw/HUXcjKXaP
      op3HzSvOGybAU+/7ScJ+naEHHufCqSN7HZNCsWdseCFseGQEhGCorxvHkWha+cJI2Q49ixbo
      JLcSQwuE6A4H6NActPCgskMfYjJGipfnvsUHBn/W7VBayoYJ0B3088qPLrO8FOPCo09wrCcE
      VO3QRXxBH/qxc+hGnHwuzXJJ4+lTwQNnh67ajQ+KHVrKe7fftL5T109kbZi1FoMoTzMdg6X8
      XEu1bWnXadVrU/e63HHHce7ZdrN2aNvZxAs0cOp+Bu6MsBJfoWSsimZTCYQviOn4KMbHEYEu
      urt6GOgVzK+kON4X2XU7dMZM0mV3EfZvfH2iGf1VnYNhhxbi3u03ra+tru9yn1f7Wl4tq/HA
      3S3ZzdqhRcVAXN/v8utV3WrHt2LHbtYOLR25uRcoGOnn3PlesqXVQk3h3qM83Hu08uq+LYm0
      munUGJpg0wTYbaqfktWNpdgbZlOTSMvifP+jLW130wQYOnWGI0fUCfBaRhavkY+kOdO3s7uX
      FM1h2CWKZuuH5De9EvyDb32N7774AxbjmZaLKhT7hU2PAO99/49TEh0EfN5dE09nVjDt3fF5
      KxRbYdMjwM1rl4knV5iY2r1qxQuxKMWSutKscI9NE+DM2QvMRmc5fUbdD6A4vGyaAOMTE2hY
      xFYOb1UwhWLDBLhx5TXmV3LYlkXJ2P2H3ykUbrHhSfAjT76PRDJJpgQ9ka6NZlG4hDEfxQwZ
      ePuPux3KoWDTr0CZjBr+3I/YyWXsTNLtMA4Nmw6DdkZ6OXfhYbrVHWGKQ8ymRwC/DlevXiWR
      KdSmGcUcI8O3SWYLjI/eZjw6SzqdxjbyJNWNM4oDyKZHgI5gJ75CnFgiw4kjldLYQufkiQGm
      FxZZWVjg7IPHWF6aZ7pocP6hR2sOPqepMomy7nfFkdnwTtl/U/lX+dlcoxn9mvLaG80rLsTV
      ybLuno1Vd+JO9cutrb8ZRNatk6oTtBpW9adl+rLxb+NEQFRdupVJpQJ4fMgNvFDNbn+nTnTd
      zf5ydeuvbvXN+70dfSnvYobLpBKkMkXOdq16/G0jz+RcggfO38e5s6e4df0GHp/AMB00sd7W
      upUAyvtWfRKsdnbVByxWDdM1h+zGGs3or1+Ysi15zUSJYHVD1Nmod6rvOHV6svZ/UZ+T9Tvj
      qkgL+y/ZaHa55m8t5O/+Nbz370BP/6baTW1/anlW66usft7U9b3eqn639prV3zABblx5jeW0
      QSa5TDq3Ogyay+SQjsFKPEEytkRndx/dXR2EO/3EkxmO9IZrltStULMBr7FD11ZI5Ve9Hbpq
      3d1Moyn96u/qp1mdHZqKHZpqdKIWIUJrjb7zwlehL4vwrMbRYAmnuj5W7dBC0DJ96rVEw0SE
      rGhSWy1Q/b+mITbQ0DStOf3K7bbVfrLGDi3r7NBCCDANtNtXEY88uWFzzeo7jrNxAhwdGGQl
      Y3Dq/gd59Oyx2vT+wSH6K89IONrfWLH3SO+WNBWK7WOWkDdvb5oAzSCNEhRzGyfAxJ1hlldy
      xBMJ+o8OcOqYKo6lOFzImQmc8esbJ8DTH/gwT+91RAqFC6inRCramoOZAKaBTMbcjkJxCDiQ
      CSCX57C//3W3wzjwWM9+Hrm4e/d7HAQOZAK4TiKGc/mi21HsHKNUvhbRxqgE2AYyl8EZ3x8l
      xQ8qcnke59ZbboehEkDhDjKxjDN20+0wVAIo2huVAIq2pqlHcxcyCSam5+g7dpJcfA4R6CYc
      9NEV0EmbPvpVcVzFAaOpBPB3Rhg6brKUWMDRexHFNEuZApMleOKJx7Bte0tFTKvUisKuKY5b
      c/1tUBy3vljtRjrbLo5Lo+OwWhyXNcVxVwv3smN90dDe1orjSilxEjGs1A/h0fXX65sqUFtX
      /Het+7RmQRey0Q4NSNtGbtL3LRendZwGN+ja7bC2OO7qPrDxei832URx3IoTt6kEyCWXWczY
      3H/6JLfvxBCOhS8QRJMFiqZNh6c5N95GbtCqBVEIgazaEMXqHLVCrZs4QpvTrxafXX3dEE+9
      O3RNAVsqhWp3oi8b2rtLcdyKM7O2zpJx5PQ4nsfftyN9u7YO1qwUqDhgWbNtKs5NXYMdukGl
      pq0Ww632q94NKhuL44q67aLdwwm7VX1biOYSwHbAyKdYTnXSGxKIjkGCPp1gh590rkAwHKp0
      YPuFY4VY9aDXr/SqNbdx3vU69VWGmxJteF39dXdf+U71t+zar+38rdWv85yvT4K1nvr694tF
      KBURgcbbZddWeb4b9+z7Rqu/0qwzeh1t8DQiFN540Sb0m0qA7v5jdPdX7dGRxvfCu1dCUbG/
      sF59AdF/DM+Hfs4VffvlbyF++iObJkAzqFEgRVtzoBPAmZ/e8GRModgqBzoBjM99HDKqdKNi
      +xzoBFAodopKAEVboxJA0dY0NQx6WJC2hVxZdjsMxT6gLY8AMpmg+IlndtyOk04i2/yGkoNO
      WyZAqyj8l/+ATMbdDkOxA1QCKNqaphLAKGR488pVAK69fZnx6CwLiwtkE4ssJ1V1aMXBo6mT
      YI8vSFfQBzg4toNRMjAyKaZLGk89eaxmh92pHXrVInx3OzRILNtC1OltRV/aNtWisDUb7poC
      rLLu/c3s0CDLFvAm9ats1w5d/Sn82R/h+cg/Q3SGtqXfaIdeXb9QN13UrfPqakAiN7C9N6Vd
      b4deU9T2XnZoucF6LzfZnB36rtWhN0JKB8MoYZSKDJ6+n7mZGUKRMEe8RVJ5g+6gD13X8Xi2
      1uxmxXFrNuA6O/JqcdxVOzQIPLoHUae3FX1H1zGp16lasOv0KsVx6+3Ka+3QULZka03q1+LY
      qh26oTju6jzWpdfx//1/vG19SzSu7+r6Xe0rjeuc1cK1QtPW6VS1t6Lv1Nuh17hI63Ub7NCi
      Zopft95h1Q7djH5TCWAU84TD3aTzFppT4sy5cwS8Oj6fl0LBnYfplb7xF+jnH8b7vg+4oq84
      2DSVAB2hCGdCVRt0oxU1GHTnUUpObAlxbNAVbYV7lJ79C+g+Qse/+Dc7akeNAim2hT1xh+zv
      /IbbYeyYtrwS7DbScZC5rNth7AzHQRYK955vH5L/7KfRgz442q2OAG7gLC+R+eivuR1G2yLT
      KWSpCKivQIo2x5UEcFJJMh//b25IKwAnESfzyY+5pp/55McovfR91/TrcSUBpGFgXrnkhnTL
      sW7fxJqOuh1GU8hSCfOty+4FYJpIe3+YCNVXoB1S/O53MK+4uDMpdsShSACZzmCO3XE7DMUB
      5FAkgDl8i8wf/5HbYSgOIIciAdoZ4513MCcn3Q7DFeyZGWK/8is7aqOpBCjmUrzy+o9A2lx7
      6zLXb40yPTNNfCHKkrJDu0L+hRcwrlxxTb/4+us4uZw74o6Dk8nsqImmrgQHOiMc6ekCM0Wg
      9z50I046tcJCSePHnjy1ZTu0Y9mNlaB3YIeutw9blrXndmgpJY5ctQZvqf+2XdeX7duhy52R
      DRW5t6pPrc1t2qErcSU//km6f/+/4jl9ast26IYK4Kzv01bs0PXzVzW3aoeuX+fNPR8gm2Jh
      YYG+I0fJLk8h/AEioTC9IYfFRJZjPaEt2VFtj95QEXgnduh6+7DH49lzO7QQAk2sWoO31H9d
      r+vL9u3QUI5X05rXLy+7Azt0xZqMEDXNrdqh6/tbfd2sHbp+/qreVu3Q9XpNJYAv0MnTT78X
      3ePlXY8/CpqOVmnIUTeHKw4gTZ0D6B4PHR0d+LwePF4fHl1Hq9xYsNWa9IcR484Yyc9/2e0w
      2hY7ldp2jVg1CtQCrKVlCj98w+0w2pb5X/23lG6PbGtZZYdW7Bhrdg7R0QFdoXvPvM9QR4BD
      QO7V15n9dfduTkn++V+Sfu7brunvBJUAhwHHQZqm21EcSFQCKNqaQ5UAuUtvq09CRVMcqgSY
      +tXfxE7v7NK4or04VAmgUDSLSgBFW7PtBHAcB6dSX7HBnNXGzP73z2DnD2apkINO+uIbpF96
      renltp0Al954lejsIpOTEyxEx4ilDsaGjz//Iouf/b+70vbS576CLBR3pe2tMPLLH8XOuFNv
      yMnmKQyPu6INkL30Dpkfvd30ctu8EuzQ29NHLBaj02ezXNJ4+nTQdTs0gGOvr1pcT2l2gcLY
      FJG+1tmhq/MD2BtUTV7X/xbboavTs2+8TU/J2FM7dDXu3PVhlp99iUe/+Wd31a623Uo7tKyb
      51526MUv/BVdhoG2HTt0DcfCcsr202BXmKN9GvMrKY73RVy1QwNo+vqqxfVotarErbNDV+cH
      0DeomlzP4pe/TuHSFXpaaIdene/e+vnRCcyxyid1i+zQa63Je22HFnXz3Gv/m/29P+SBX/7g
      9uzQNTQfDz788LYWbXecbB4rlakk0N6TfPE1cm9cos8dea5++F9y+n2n0EN+lyJopOWjQNkb
      oyw/+71WN6s4JORHJpDOFh9isQe0PAFyN0eJfePFVje7ZRIvXyL6qc+7pq84WOz5dYCVF19j
      /ovP7lr7xvwS2WvDu9a+Yn+z+FcvYGW3XqBhzxOgcCdK+sqNvZbdM5ae+wEjv/0J1/RTb15j
      7kvfcE3fbUZ/+xOY8dSW51dXgluMlclhLMRc08+NThL/G/fuTrvyj/4dxfll1/SbZVcSwMrk
      eGHgJ5COujrcbmSuDSONg+PI3b0jgIvWCMc0if6fr7mmrzg4bDsBjFIR0ypf+ZXSwbLWD21Z
      mRyOC58GTqHE9d9cX//+zqe+QObW7l+utwsl3vn3659/YKayOOb2qhc0g2NYzH3Nvfr7ybdu
      kR2dck1/+Pf+mOiagZbUO8OMf3q9BWZ7CSANbl6/zc1bw0SjU8xO3iFdWL+jX/5Xv8Xid16p
      vU5cvkEpltiW5LbCtG1kXb2ipW+/SmF2cdd1HcNk+ovrT0R/9Eu/Qezi7pdSt3IFrvzqM+um
      v/Xrv0fizeu7rh/9wrMsvvBqw7TYxctc/ejePBTFiKew0o3lGvPReZa+t94st70EMLN09p+i
      K+Ajn08zlyjS2xXYcNb5b73Crd//LPHLN7jxO/+T5Fu3tiW5HV77hx9l/vmXcUyT+OWbe6Zb
      5dpvfYqV167uuW5N/z//ASuvv1N7nR2bxsrsTQ3X3MQsU1/+Zu21mc6Sm5jZE22AxOWbvPMf
      /wfxyzeZ/fqLJN/eeGh8e1YIbzfFxNuIQJju7n5O+Fa9QGspLsQozMcY/dQX6X3yoW3J7YTJ
      zz/L5BefI3bxMv2PP7Cn2qkbo2RGJxGf0olfvkn3/Sf3Vv/6KFa+yPx3XiH65efpOrN3z1PO
      js+QuH6H6898mt6/9TBsoWZnKzESafLzy0x+8Tn6nn4MITb+tN9eAgiNd737yYZJ3dtqaPeR
      po3EvUvvjmmDabt2n0B+ag45BZZL+na+gF00ambH/YaQFU9pJpNpyU0t6flFvKaNXSghOvwV
      2zA4RQPh96JpZReeV1hYR/oo2kUM26JoGEC50CyAZVsgwaN7QIDEwefVCHqDeKXAZ1hgGEhE
      2RprS5yCQdHnxeeAVSihBfxVeWTJQPN50XSBpgm8Hkky7MMwbCzbwTBNdI+GV/cghMB2yhWk
      dc2DABwcvB6NDk8Qry3xmhYUCzjoZfuu7WAXDIyAD69TPhEWgVXDV01fEwhN4BU2IhwipzkY
      wsFyTDShoQsdBDiyfLORJsolJx3poOsaIceP7jgI00QWizjCU7YCO/Ke+qKir2kCj7DQQp0U
      vAJTk5iOhSZETQ8ktrQRUiCEVikCLAiXRPk5x44Nholj2kjdg5RQzBcQjkCvbHcpJdIwEX5f
      becXRglvuAPNo4NHJxWwEU7ls1kIHGx09EoEYEsLHR2P5sEjNQIlC2lbSKfcZ0oGDgIpdEwB
      MldEC2yur1X0hdcDXs9qArSKdDpNKBRC07SGgrlCiIYEq1pZq9N2+ro6LZPJEAqFNtRrpf5m
      bR4W/e3EVCwW8fl8aJrW0Mbd4tjKfrLVmAqFAn6/vyl9/ZlnnnmGFlIqldCFZNLaocwAAATa
      SURBVHpuiZ7uSM13LZ0iN2+MgNdPV2dHLfDpyTvkDEmkqxMhBNlUjGTWQlgFxiemCIQieKTF
      9NwiQZ/gztgEyWyB7lCA8bExHM2HXUqTKUhCwUBF32F6brlR376bPhvo52v6+jr9It0hP2NV
      /WKaTGmN/vxm+oFG/Yk75E0I1+mnchaYecYn6/WXCPrgztgEqXp93YddSJMtQWfQv6m+Yxe4
      dWME4Q0Qupt+Mob0d5JYnGFmIUZPby/5dJxk1sDMJ5mcimLhQ7MLjE9ECXZFWJqeIhDpQ9om
      uq6xOBtF74jg9+o1/bnoBHOxJP29PbV7MrKpFcYnZ+jp7cOja0jHYmJymr6eMBNjY6QLJt3h
      EAvRCTyhHhZnxpmemaUzcoTU8hyzS3Ei4RBT0Vl6e3swTROPR6/od+P3anfXT67szoUww7TI
      ZBv9GKXkMilD4vfX+cDNJHmni9TSAuXRcYkUkIzFCQQ76e70E4unMEyLbDqNPxjm/NlTaEJH
      aDonh04Siy0jkSTjiTp9e71+ar2+NJMUnC5SS/OVs4SK/kqcQDBEpNPPSiKFaVpkM1X9ITSh
      ITQPQ0MnWYkt4+CQXEk26mca9YvJJdKGxO/3reobSQqESa7RT8TiBDqr+umKfqqmL7Ry/4eG
      TrKyXNGPN+pn1+kvkzZo0HdKCYpijb4GOQvC3b0IM0e2ZCOFJBmL03vkOMd6QvgCAXyBEMd7
      gyzFU5QyKQrVm8xsG6uUIVNqLJe/uLTYuO2Bmfllzp4IMzZVtk6YhkEmmwE0+vv7SSbjIB2M
      TJqcJRk6c44Ov5+ATyPSdwTdKpDJF8nUPSVG2jZmMUum1Hjet6H+wvLuJEBnqAuv3ti0LzLI
      e594iOmJugtR3m46SJPI5Kne2xOORGp3H6Fp2KZJMNSF11NubyY6w8lTJ3CsIuNTc5w/d5Zw
      ONxwgrVVfeGN4K/oU9NfbUtoGlZVX6/qz5b1zbL+uXNny8vUBbCRvr/7BO9Zq++L4Jepu+rb
      a/Sno7OcHBrEMUuMT82X9Tfov2eNfqD7BO954kGidfqavxufs14fACnRNQ3TtCrbRCClw3K6
      RH+4g2wqRqLk4czxfrpCwdU+6R7CoU4akbzr3T+Gk4xTPwh74lgfdyaiiMpXFn9HJx0+L1Rv
      krUdHE0nHC63ZxbS4O/CI2BhJkrk6BC9kTAB3+pYTlk/SCMV/cQK9UMBJ4717U516JWlOQr5
      AvFUjt5IOXjLyDMxNcPAyVONoUnJ/RculE97pCQ6OUm+UCKeiJPMFBg4eZT40jz5QoGVVJau
      3iMEdEEmVUA6FkvLK5i5ONmsiVnxHm2oX8ozEZ1hYKhev3zPcYP+xFSD/vGTx1hZmiNfKBCv
      1y/U6WfX6C9W9NM5esON+sc30D93N/2hRv1wRT9dKCAdk6XYCkZmhWzWxpSb65ulPJPRGY4P
      nW7Ql1Jy7oGqvsPUxBRFOih6TCzNTyToIzoxRr5QpFDIMzBYHsotFEoU8yXiiQ6WMwV8c7Oc
      ONqDbZaYi2URuTkGwlUtycLsFHZnF/W7pgS0QB/nTpXvT8umVsgXCswvLpNJJejq6UFYJeaT
      OXRrFn9fiJMnBgAoGSXyy4voTpF8ocBiLEmow4ttlphfySLy8wyET63qz0xhh8J0NOx78P8B
      UvZRkzYtCuIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Soham - Busiest Hours - Groups' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Soham - Busiest Hours - Rank' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Soham - Days Since Prior Order' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Soham - Number of Items Purchased per Order' width='192'>
      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
      v48EQHS0/w9ax5QXs/KlYQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Soham - Number of Products Sold per Department' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Soham - Top 10 Products in the Busiest Hours' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Soham - Top 10 Reordered Products' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Soham - Top Products per Group-Early Birds' width='192'>
      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
      ONj+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Soham - Top Products per Group-Evening Hours' width='192'>
      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
      kshb/O3j/wKCpWwCisYuZAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Soham - Top Products per Group-Friday Rush Hours' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Soham - Top Products per Group-Late Night Hours' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Soham - Top Products per Group-Monday -Thursday Rush Hours' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Soham - Top Products per Group-Weekend Busiest Hours' width='192'>
      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
      /3/z+lLwokcSAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Soham - Treemap of Aisles and Products' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29129c257n99mxciKriixGUSKpRKWTpHN0bt97Z26H6Rl3N8YYP8yrDdsP
      9vwHfvQfYBjwg2F4YBjGwDAGHmC6Pd19+6Y+SUfSUQ4Uc2YxVE47bz8USZESo0RKorg/gsAK
      e6/fWlX7V3ut3/qt7xJc13Xx8DihiO+7Ah4e7xPPATxONJ4DeJxoPAfwONHI27343//7/4qG
      UX/XdXnvfNZzg7sztz5Ku0dl43/5V/+W6v/576h98+2hl33YSIkEcmsL+tj4xmvbOkDdqNMw
      T54D6JZO/T20+13YPSobLuDqBm79w79eXL8fR9O21NXrAnmcaDwH8DjR7OoAAgK/6P8VqXDb
      roWcbxva8jwT7eRm3x8hCdJrx8b8cVTJR0/i1MFr+w4533aRy5mrux6TDKVIhtKHavds+gJX
      Oj7Z9ZiWYJL0Ht/Jblxou8RQ5squx6TCbbSGkm9sYyfUwUGQXr8udsN3/vyh12OdbccA67RH
      O+iIdrJUyXKxfYiJ1THaox2oso+p/AT9yUEmcmOkwmkSgZ+Rq68ysjzM5Y6r1M0617o+QxIl
      NFPjWfYxFzNXqBkVylqZPzrzT7g19S3pSBumbXF/7g6WYx1ZQw+CLCpcylxleOkpN/t+Ts2o
      UjdqJMNpFsvzdMa6aZh1FksLDGUuY9oGvxv7h0OwK3O54yojy8N81fczGmaDqlYhFWkjW14g
      E+1Et3Rmi9Nc7fwE0zb57ejfH8iGIikMdVzhefYxX5/+BRWtjGY1SIZSzJfm6I73UjNqLFUW
      udA+hGkb/H7sN/suP/TLX4DjoI+MIidbkVpb0R4/wX/hPHaxBK6D0tmJIEvIqTQoMvrz5/iH
      LiEGA9Tv3MU3MIBr6Fi5fPNYVUF//vxgH+Y+2fUOsFJd4sXyc3K1FSZzE+i2TjKcxnFsDEun
      ZtTwyT6KjQK3Z35AEmVcXGYKUzycv4eLy52ZW0iiBIKAT/ahiCp1o8boygvGVkfI1VYRBQFJ
      3NUX3ymWYzKRG+Np9jGGrfNw/h79qbM4ro0kSBTqOSRBQhAEHi7cI1fPHZJdi8ncOE8WH2La
      Jg/mfmradWwksWlXFEUkQeTRwn1WaysHtmHaJhOrYzzNPkG3NB4t3Kc/eRbbdZAEiXw9hySK
      zbbN3yNfzx+ofDufp/7DLeT2NsRIFDEQQO07hTE3h/b4MYI/gP/iBexyBcGnIre1oXR2Ub91
      C7tQwNffD6IIgojUkqD+3XfYuYPV4SDs6gCu69Iw61iORc2okq/nqeoVTMdEEARkUcIn+9HM
      Bq7rolsa0Iw42I5NRSvjuA6rtRWu935F2BdGszQc18ZxHfqTg/hkHz7Zhyh8WMORhlnHxaXU
      KOLiMp2fREREMxsokopP9uO4NpZtoZmNQ7NbN+u4sMnuBKIg0jAbKLKKX/bjuA7mW9htRvg2
      ta0wiYiAZmmoa22zHRvLObgNOZMheOM65tw8gizh6jrWygpKJoN/aAi7WKR+60fU030gCDi1
      GlY2S/DGdeSODoyJCQRFxqnXcUplgl99iRAIvFE794OwXTLcf/nv/vWJDINe773Jj9PffZR2
      j8rGv/3X/zfV/+3/oPb73wPgOzuI/mLkQGWI0Sj+oYu4lkXj9p1Dr+M6UksLUrIVY2R047UP
      p9/h8VFw0IsfwCmXqX//wxHUZm8+rH6Hh8c7ZlcHCKoh/ungn/Gz07+kLdL+rur0QdCfPMul
      HcKgyVAKWVRIhw//MzmTHOBKx7Ud7UqiTFsk81Y2BlLndgyDJkMpFEndM/R9GMgdHa+9pg70
      bzz2Xxp67f1Dr8Nub0qCxGp1Gd3WCSgBhtovkwi28GTxEVc6P8FxHR4t3Od0az9BNcjD+Xt8
      3vsVjmNze/oHhjKXkSWF7yf/8cgbcpjIosInXZ8xvPSUz7qvYzkmlmPzLPuEs+nzCIJA2Bfh
      Ru9N/nH8dwykzrJaW+Zp9vFb2pX5pOtzRpaH+bT7CxzHwXRMnmUfczZ9AQEIKEG+Pv0L/jD2
      Dwykz5GrrfJk8eG+bSiSwrWuz3iefcznPTcwLAPbtXmefcJA+hyiIBL1x/i85wbfTPyegeRZ
      VmrLPNtH2wRFQenrwykWEfw+5EwGXBdjfAL/hQsgS2iPn+AbGMCp1fBfuUz9xx9xdQOlqwtz
      egqluxu5vR1jYhIxFGqODy5eaKYwaDpSIo726DFOtfrmH/Qm9uwCRfxRZEFCEmSCaoigGiYZ
      TpOtLDC89JSYP45P9hMPtBD1x5nJTzGVnyDqj6LKPjqinciiciiVfVdsDoPKkszD+fuE1DCC
      ACE1REgNs1TJMrz8jKXKIg2zcShRrM1hUEVSeDD/EyE1DAiEfWFCvjDL1Swjy89ZrCzSMBqI
      gnAgG5vDoJIo83Dh3lrbBEJqeKNtz5eeslTJrrVtfzZc00SKRZE7OxHDEaRIBEFVUbq7qN+5
      jVuv4xscBFHEqVUxRkcxRkYRI2EQBJSubuzVHPXvvkdpb95d148XA0FcXce17QNPpO3GHmFQ
      h5AaoiWUxMUlqIawHHMt/NcMZYqCiF/2Y9omrutguxa2Y6FIKqqkYtjGoVX2XWLaJi5Q1sq4
      uJi2wY3em6iyD9M2sB2LVDhNWzSDIAjEgy2HZpdNdg1L58apm/jWPmPHcWgJtZKJdiAIEA8c
      3K7pGIBLWSsBTYe/3vsVqqRg2iaWY9IWaact0o4gCCQOYMPO5RD9Psz5eXBcnFodO5cjeP06
      cnsb5vw8giLjmhYIIr7BQaRwGBwb17YQIxFCX9/EWlrCNU3M2RkE1YdTKYPQvMtIkfCB27wT
      Xhh0E14Y9OC8GgbdDimRwHf+HLgu9R/efbr5Rj28MKjH+8AuFN5bmHMvvDCox4nGc4Ad6En0
      crPv51zr+uxA5wkIpN4iQ7Qr3sPNvp/zSdcXBzxz/3bPpS8cvGL7RB0YaHZ3tkFKJRF8PsRY
      7MjsHxSvC7QDXfFevpv8A+faLtIZ66Yj1slydYlkKE1IDfEs+5jOeDdhNcK9uTvcOHUTx3X4
      fvIb4sEEQTVIZ7ybRwsPqOqVfdvtSZziu8k/MJg+T1e8h0y0g9XqMolgkpAvxPDSUzqinUT8
      Me7M3OJm3x9huza3Jr8lHkzgVwJ0J3p5svCAsl7e1kYskAAgqAS53HmNulFnpbpEV7yH6fwk
      g6lzyJLMj9M/cKXjGg2rwcP5e3vWXfD5CHz+Gdr9+/ivXcM1DbAs9LFx1N4eBFmGVArf+fMY
      IyOI0Sj68Avs3OEkE74JngNsgyAI2I4NgG5pBJQgpm2Qr+VQRIVseYGQGsYn+YgH4rSGkiyW
      5jFsg6ASJL52gX0/+c3B7LLJrqkRkAPYjs1SdQlV9rFQniOshlFlP1F/jGQoRbayQN2oE1Cb
      dl0/+553UdeSEE+1nEa3NKbzU8QCcR4s3ON829BGsmJADSIg4LK7hpqr6xhjY+jDLwh+fZP6
      N/cJ3riOIIpIsRiCoqCPjILj4FRrCMEgvGddNq8LtA2u66KZDW72/ZzeRB+rtWVKWgnd0uhJ
      nGIocxlFUogHEthroWB3y/mgmRpfnvoZYV9k/3ZxqZs1vj79c04nB1iqZilrJQzLoDPWzaXM
      FSRRJhFINFOzRYnNhl2amZ5fnfoZEV90RzvxQILrvV/REevaSEO3HZuaUaXUKPJ5zw264j0s
      V5dQJJVCPb/nxb+lEjTzewCQFQLXv0Dw+ZpvmyZKXx9iNIogy8jpw11QdFC8O8AOPFzYessv
      NgqIgkSxUSAeSLBcXWJsdfvEr7uzbx7qe7zwYMvzslZCFESKjTzxQAsr1eWd7e5T9eHvhv96
      x/cE1tKlXZelyiJLlcV91x2gcaeZzak9fARA/dvX1SKq/+lvD1TmUeI5wAFwXJt7c0eXrruz
      XYd7c3ffia2qUeXHqe/3/4t/zPG6QB6vcVIufvAcYEe+6PkSgCsdn+CTfe+5NofLetuOgsBn
      nxK8+RXBr7+GA+QpSYkEKFs7JP4rVwh+9SWRP/vTLfk/cmcnUkviUOrrdYF2IOqPcbnjGl3x
      Hibz41zt/BSf7Ge2OE13vJfRlRf0JwfRLY2f5m5vRG+OA8Ja4l5LMMm5tvO4LpS1Iq2hJDF/
      gppR5fnSE861XQTg0cJ9bvTexHZsfjv6awxb375gUQRJpv7d9/guXkA93Yd65gz66Bhqby9i
      wE/97k+oPd04DQ1BVRCDIXBsnGoNd2aGwNefYOfyaI8egQCupuGoKoIkEfj8MwS/H2NyCt+V
      KyAIWEvLmDMzqAP9aPcfHDiq5N0BdqBu1hldGWalukRYDeOT/SRDKQr1PJrZIKgGWSjNIYkS
      qnQ87xDdiR58kh/d0rAdm7szP5KtLPJo4QGtoSRzhRkezd+nLZxhbHWEkZVhVGmXzF7XRVj7
      pRZkBddx0YeHcWs19NER9NFRxEAAMRxGisdwDZP67ds4jUYz4zMcwpyfb178gGvZ6COjuI0G
      UrI5iSYnkyCKaA8fYS2vYC0u4js7iFtvvFFI1XOAHSjU8zTMBvl6DsuxcF2HklYkoAQRxeaX
      HFSDiIKE6zrvubYHQxRErvd+xXJlCdu1MW2DmlHDdm3KWgnTNliuLNEaTnG+7SLThYk1ucwG
      lrvLnc51sVZWCN78CnCxCwWcWh2rUEA9dQrfuWZCHI6Do2k4tRq4Lk61ilOtYheKSIkE/kuX
      msXpOv5LlxD8ftxGAxwXu1TGbdTxXbiA6PNhFwqI4TDm3NwbfRZeF2gHni89AdgIOS5Xlzbe
      WyzPv5c6HRY/TL2coHu1LS+Wn2083tzmmlHbV9nG6CjG6OjWFxUF1zSx8wXMbBZzdnbrOeMT
      G48bP97esazaNy/rbWWbdROjUexi8Y0XyHgO4HH0mOaRqT045TLag/2viHsVrwvkcaLxHGAH
      VMnHXwz9528cAl2PoHh82HhdoB1oj2aYWB2lPdJB2BdhdGWYc20XEQWRsC/CbHF6Q6VhfGWE
      wfR5GmadfD1Hd7wHVfKhmQ264t1UtMprqRUeHwbeHWAH+pODJEKtnEkOsFpb5nz7ELqlIYsy
      P0x+Q3ukA8dxuD39PSFfCIDOWDetoSTfTf4jufoKqXCa7ya/QZGUD0760aOJ961sgyTKZCuL
      fDP+O5YqixTqedojGabykxi2wZd9X7NQmsPF5fOeLwkowY1MzlKjyJenfkZQCbFUyXLz1M/Q
      LQ3nmIVKTwpeF2gbbMfa0MFZ1/r5u+G/AZqzouvMFqe3PX8iN7bxeKYwdUS19DgMvDuAx4nG
      uwN4vDVSNPLeF7bsBzEeR0rEt9TVcwCPt0bw+RDDoSO14b90Ce3x20lPYpnYKytb6uo5gMdb
      Y62sYkxMHqkNOZ0+EhveGMDjROM5gMeJxnMAjxON5wAeJxrPATxONJ4DeJxoPAfwONF4DuBx
      ovEmwjbRk+h9L3YHUmePrY3jnubtOcAmZgvT72WLpFdt3ui9ya1DrseP098dSbn/7c1/c6jl
      vWuOt/seMh+KIOBR1eNDad+HhOcAHieabbtAzQ2Ud5C/+4j52DRAPfZmWwe4M3PrxG6Tus5Q
      5gqiIPDoFb3+zaTCbQhsFZD61eCf8Wjh/pbXNo4PpZEkmVKjuO/PN6SGuHHqa36c+p6qsfNW
      S0PtV3iS3b8+zlDmCgICjxd3bl863IYLrGzTlo8FbxC8DbKocKFtiOGlp/yi/1cUGwU0U6Ml
      1MpyJUtnvJuqXmGxtMBQ5jK2a/Obkb8jHW6nPdrBTGGaT7o+52n2MS3BVspaiapRoTveSyrc
      hmY2WKws0B7JMLL8nOwum1Ccbh0g4oswkD5LxBdlYnWUnpY+REEgV8uRCLbwYvkZXfFukuEk
      I8vDLOyhXLfevueb22dptAZbWdrcvvICF9sv46y172PEc4BtsByTidwYT7OPudr1KQ/mf+Kf
      X/grcrWV5p5d5UXigQSiKPJw4R5tkQwAy9XshqCu6RhkywukwmlEUUJARBJlpguTLJbmcXGJ
      +eME1eCudZkrzaJZDQQExlZG6Emcwi/7qeoVlqtZwr4wITXMQnme8dUR2qMd+27fs4323eNf
      XPxLVqsrWI71sn2CyKNN7XufyJ2d+M6fP/xy9zqgPZKhYTYoacUdjwmpoS3akZIg0ZM4xXRh
      8jU1hKAawrAMLMd8i2ofPVW9gotLsVEAYHx1hJZgK6ZtEAvEkUQZwzIwHZOa8VKXsqKVsRyL
      ml7FciwivijJUIq7sz9S0cvka6tczFxmpjCFvOYYu2HZJg2zAbgYtsFUfoJUOIVhG/jlwMYe
      XzWjiu3YaGbjDdrnMray3j6TeCCBJEqYtoFhG1va976wCwXM+cPXZN3VARKBFm6e/gU/TP7j
      xq4hqtTcWXC1tkxP4hS52gr9ybPk6qssV7JolsbnPTdQZZXV2go+2Ydu6VT1CiFfGBERURH5
      ozN/zr3Z2+i2TliNMFec+aB2JhleE4kdXx3d8hyav8qbKdRfbvP5bE1Ut7K2Rekfxn+z8V5+
      7bj18cFccWbPelT08kZZADrw+7GXZc6/Upf50v5Ukndr36tlFur5fZV5lLj1+suN9w6RXX9+
      DNsgV1tBEmU+6fqcgBzgk+7P+aL3BufaLtIR7USVfATVEI7rMJBqbpBsOiZT+Ukud1wjEWxZ
      23dW4WL7ZbriPSii0nQKo8onXZ+jSOqxn1H0OJ7setXplkZFK6NbGi+Wn2G7NlW9zL3ZO8wV
      Z5gvz3EmNUhFL5MtL2CvacfXjRrFRoGqXmF05QUODrIoEVACAFiORcOoUdOrPF54QHs0Q1A9
      2kXVHh7bsasDOK7DfGmWql6lrJXJ1VYp1Aukwk1ZiVQozWxhau3id1iuZIHmLV4ztQ3t+bGV
      ES5lrrJYnme5mkW3NObL85xO9hP1x6kbNer71J8/aQSUIL/o/xVh9fX9hmVRJhFooSvec+By
      z6UvcClzddv3kqEUiqSQ2ceA+riz6xjAcZ3XQnTrG0cA3J39cct7q7UVAHK1VeBlX7eil7k9
      88OWY6fzE3jsTX9ykHggTl/rGSL+6MaO9C3BVqbyE7RFMnza/TkPF+4jizIBJciD+btrA+ft
      kUWFyx3XeL70lC9P/YyGWQMEHi884Hz7EAICEV+UL3q/4tuJ33E2fYGlyuKGSt6rqGdO42ra
      EX0Ca+x/v70D4YVBP3A2wqCCyGz2MT7ZT0AJ4Ff8SKKEKIqMrY7wZPEhfS1n8Mk+FEnd1QE2
      h0E/7f6CB/P3mpOAgoBf9iMIIuOrI7xYfsZieYFMtBN5l73BjPEJ6rfefHPw/RC8cf1Iyt21
      CyQKIm2RdlKhNMIBXDCoBIn5Y0BTaLYt0o4qqQeqmEDzy9jymiCQDrc3Z2BPyKDZcZp7eOmm
      hmY2qBlV+pODtEc7sB0bw9JpmA0uZa6gSAqKpO5r0z7N0nBxKWml5nOzwfXer5BECc1sYDoW
      LcFW2qMdSKJMSA0fdVPfC7veAUJqmL6WM9SMGrFAnGxlEVVSyddzBNUQQSVIoZ7Hdm0CSnBj
      gubn/b/i+dITSlqJG703WSzPc75tiG/Gf4cqNx1BFJqD4nw9R9Qfw3EdqnqVkBpCFESqRhW/
      EsB2bKKBOPl6jpASoq/1DBW9TGuwldniDD7ZT6GeI6gG8SsBcrVVYv44giBQbBSI+KLIokyh
      kacl2NqMa+tVWkNJqnoFzTriW/dbUtKKW+dgLI1/GPnbjaebQ6QAIyvD+yr3yWIzbWJ9T7Dt
      9i/47ejfA7Cwz9DqcWTPLlBLKEnQF+LxwgO64710xroYWXlOV7wH27GZKUyzWlvmk67PqBlV
      qnoVWZSp6BVkUUa3NCZyY0R8UTLRToY6LnN35jbn2y4gCCJPs4/oTfTRFmnn0cIDTrWcxsXl
      xdIzMrFOgmqIfG2V6toX3RJsJagGGV5qTv93xLoYXx1lIHWOfH0VVVJJh9vpinfz7cQfuH7q
      JppZ5+7Mj5xuHSAZSjK8/GzjPG2XNASPj589HeB59gklrUhP4hQhNUzDbNASTG5ssSkgoIgq
      Fb3CTGGKTLST5WqWXG0FURDxKc0+ZdgXZrG8wJPFRxi2TrayiCwqRH1RlLXukSqpTObGCa7d
      BQQA12UiN4bruiiqyovlZ+TrOU639uNXAtT0KhFfc3C4WJmnNZgk4o9iOhYBJcBMvjkbnQyn
      cXFRJIVcbRWf7KMz1sWS5wAnmj0mwnQ6Yl0Mps8zmR+nZlQxbJ254gxRf4zB1DlcHOpmDcPS
      GUidZSI3ymK5eVE5rsPE6hjXe75kvjRHVa9Q0cpUtDKxQIL+5OBaCoVLrrZKSStSNSoUGwXq
      Zp3V2gpzpVk+6foCVVYxbIP2aIZz6QtM5Seo6hVs1yZXWyVXX0UzNQr1PLqlUWoUqBk18vUc
      hUaeQj2PIspkK1lkUSLmj29ErU4iiqjwJ+f+OYq48+A2E+0kEWx9h7V69+x6B9Atne8m/7Dx
      /MH8T0BzcNwV72G1tsJKdRnYOpU+U3gpYrpYnt+6F63ZHOC6jsNCaY7V2sq2qcPARg7K5j7o
      95Mv94rNb0pBWKdh1snNrG4839xH3rwc8NWw7EkjHWlnpbpEW6QdSZTpinfTMBsUGnkykY6N
      x67rcrXzU8K+CLenv8ewjfdd9UPljcKgjutsOMOb4OLy09ztvQ/0ODIG0+dwXZd4IM5MfpoH
      8/cYTJ/DJ/m4N3+Xi+2XEASBgBKgr+U0q7UVIr4oufrq3oUfI05GLNFjC5IoU6jn+f3YP1Cs
      F/Erfj7ruY4syoiixBc9XyIgYDv2WiZwCcM2qJsf32y9NxF2ArEda+MOfn/+Ln0tZ7gzc4u6
      UeNMcpDb099vCQ9nKwvvq6pHjucAHkzmxzcej6+OvMea7Iw6MMBR5EN4DuBxLDBGR6nf+nHv
      Aw+INwbwONF4DuBxovEcwONE440BPkD8so8bmzSKDouB1NlDH0Ye96WsngNsoidx6qjWXRyI
      dCTD//Pg/zr0cl1eF+J9W/6bYy6O6znAJmYKU+9FHfpVPhxtjI+f433/8vB4SzwH+MBRRIUv
      er7cdlH8Zrpi3Qcq1y8H+KLnyw2lju0QBJGOaOeByj1ueF2gHchEO2kNJTdWTm1HxBcFtmac
      Xu38lIXS3I7iuDWjhm7r2I61r3qca7tAR6yL1doKp9TTLJTmON3aT82okqvlOJ3s58XSM861
      XaSn5RSPFx6+tkpsO650XmsueYx0EPFFmCvNcrp1gJJWoG7U6Ir3MrL8nAvtlznVcpr78z99
      lILJngNsgywq/Oz0LxhefsaZ5AB+OUCutkJvSx+jKy/oiHUhizJLlSzn0hcoNgrcn79LOtzO
      UOYKxUaBocwVCvUcoiDSMDV0q0FQDfFJ9xdoZoPh5Wf0tZ5hfHVkI6V8O+ZKc2iWhiqpFOp5
      UuE0UX+MVDiN7djopobjOuTreUZWntMeyezLAeaKs8wXZ0mEWsmWF+mMdxPyhUgEE8wXmwvx
      HddhpbrETHGKVDjNTGHq8D7kDwTPAbZhQxx38RFfn/kFP0x+wy8H/piqXqWv9Qw+yUeunsPF
      ZXT1BclQCngpjltqFGkJtrJcXeZS5golrURFE0lH2jfEcaP+GLZjYTv2Putkk6/nsB2blmCS
      ueIMJa2IT/HTkziF5Zi4rnNgeUnD0ilpxbU13QHmajM0rAbtkQwdsS4sx3pN3/VV5PY21MHB
      A9k9KHJHx5HY8BxgDwr1PIZtUNZK5Ot5io08UX+MrlgPuqXRMOvbXiDL1SUc1yYRbKE1lOTR
      wn0ATMvgVMtpspUFGmaD3pa+bRf2rFNsFKhoJVyaChENs07NqGC7Doalo1s6Za2EJEhYjsVU
      fnLHsjazWF5AoKm0YTkW04VJCvUcpmNhOSZ1o0ZZKyEKIrZjU9V23psg9ld/Seyv/nJfdt+K
      /+JfHXqRngPswKOF+9iuvSEEdnvmFjF/jLJWpqZXyZYXN1asbb6A78/9hOWYlLUStmtze7q5
      8qxmVCnU85iOScwfp2bUMO3mcbvhug7WKw5W0V9ejOvq1etOuN+xhbMmY7n5hlHe1HV6rVx3
      5zvVb0eHeb589Gur+1vTjOV27i6+STmeA+zA+tI/027KuNuOtXGhV42t0u6O7Ww6b+vWUpv7
      4+tlrl9cu/3yHycapkn5qJXhgLppHIqdzeV4YdAPnHVl7t20QQPK7ptsbIcq+ZqK39uEQf2y
      n6gvSvANyj1ueHeAHeiK9zBXnMEn+fAr/g0FtXfN+baL9Cb6yNVW6Yh1UtHLNMzGhl6SXwnw
      5xf+gocL9yk2CmSinTycv/fanehVrnV9SmswyUp1maAaoqKVKGslYoE4Ja1E0BfmV4N/yt3Z
      22hmg2Qoxf35n/bdxToueA6wA52xbuaKM4iihCjKDKTOkgi0rPX7BcZWX3Cx/QpLlQUc16E7
      3sujhfuHrjQ3X5pDtzQCahDd0nBcl3ggQSqcpm7USARbNrRBP+u+viEgthfrYdCWUJJcbRVF
      Ugn7InTEurEdh4ASZHRlhOGlp9zovUm+kf8g8qQOG68LtAdBNURrsJV4IMFUfhIBAVVSGGq/
      QtgX5nLHNTLRzj0Hs2+LZVtky4tYjkUylNqyb5cgiCRDaeZLswSUIO2R9n2Xq1saq7VlbNci
      HWnbkL6HZherJdjKbHGaeCBB61q492PCuwPsgL72S94UpzWp6BUMW6eiVwisbWw3mR/HciwE
      BIJqkM5YN+O50UOtR7lRpL4WbTJsE81s4Jd9TObHqWhlJsymvXggQVWvsFTJ7kvLc7na3MtB
      rEkYlsFCaR7XhdniLBWtjFgXWKosElbDVPUKc8WZj1JFz3OAHVhXTSg08hQaL/fIWo/gvMpu
      mwi+DbZrY1tbQ5Cb9wFbf299H4fNIdLdWI9uQfOv67qv7Q1m2MbGxiXvawx01GzrAIlgC37T
      v91bHzXSMV/c4XFwtnWA1lAS3fywZcOPAlGU3ncVPN4x2zrA2MrIR5n5txcfuxXrV2IAABQZ
      SURBVBCsx+t493yPE403CPY4NnTE4odSTlB5uV3XHg4gcL33KyZyY6zsIGEO0NdyZou8Xkuw
      lcH0ee5M//BaElXMH6dhNogFYrvmwXt4vMpCqcjwcvatyzmXfjlPsqsDZKIdnGntJ19f5VSi
      j4XyHG2RDIqkMLY6yvm2i8wUpuhO9NIezbBYnmc6P8XnPTeom3X6U2eJ+CJU9DLjq6OcSQ5S
      N+qossqfnvsX3Jr6logvgiyp3J+7g/WRTbOfFCRRQBKPZ296VwdYqS7xYvk5pUYJAQHTtkiH
      22iYDcJqGHttsUSxUeBZ9jGD6fO4uMwUppgvzXG+bYh7s7e51HEVQRCJBxJIgkSxkWd05QVj
      qyNc7fz0o8svOWkkQ2H6WpJHbkcQDicZoyUY2rgL7DkGaK4wcilrJSp6M8e9btbQrOY+tJlo
      B7qlbxy9mYZZx3RMakaVG703iQXiGykDftlPf3IQx7VpDSUJKIF9T+J87ByVMFb/EQljLVUq
      jK0efXd2c9flbcjXaxtdqV0dwHIs7s3d2fLar1/8p43HS5Wt/bFn2ebikedLTwE2VkG9WH7O
      i+XnW479w/hv3qTuJwLN0o9En+jW9Hdc7715qGUfd2Gs49lx8/A4JDwH8DjR7DkGuNr5KUE1
      xIvlZ+Rq+98gLR5IUNOrmM7L5YNtkQynW89QqBeYL81SN2q7rjXdqKQokwq3bd1tcgdS4bZd
      Q7a70Rnr4lrnZ2907mHSGet631U4MezqAO2RDDW9yqOF+9w49TXT+UlS4TTzxVn6U4NYjsXw
      0jMuZi6zWl3BdAzawu2UtBI1o0rDrHM18ym2Y/N48QFnkgM8yz6mrJX4Z+f/M8paiRfLz2mP
      ZliuLNOd6MGwDVaqyxTreS5mrvAs+4iWYJLzbRc51dLHg/l7DKQGUSSVF8vP6U8Okqutkgi2
      UNHKCIKAYemca7tItryAKqm0hpLcm7u75yqppUqWp9nHh/oBvwlBNbTxOKSG+fLU19ya+o6q
      sXOQYChzZVcRr+1IBFq42vkpt6a/2zH1RRREzqUv8GxNHOBjY1cHCChBynoZx3VwHJu2SDsT
      uTG64j3cm7vLtc5PUSUVATibPsdUfoIH8z9xvn0IVVKxbBPd0hheau4hfHv6ey53XEOVfcwU
      phlfHaU1lKRu1Ck28vS29HGq5TT52ir9qbMElABnkgOsVJeZK86wXF3iUuYKyXAa3dJIh9tw
      XZeV6hJd8W4eLzzg854v6Yh2Yrs23YleKlp5LWK1t16O5Vh7Osm7YPN8yOnWfsK+MIPpc0R8
      EcZXR+lp6UMURPK1VeLBFl4sP6Mr1k0ylGRk+QUL5b3XA0BTLt2vBLjQPkRQCTGVn6A73oOD
      S82oElYjjCw/p7elj7ZohieLDz+6yctdxwAL5XkutA3xSdfn1IzamiZNlYbZYChzmZZQK+lI
      O5qpNYOlrovjOrhu82JrWA1S4Tb6U01Bo+54L4ZtIIsymtngfPtFRFEkX8+RCLYgAJZtkq/n
      OJMcYHjpKb2J0xQbBVKRNs6mL7BYXqBh1MmWF6gZVfL1HC6s/W3aLTTyaFZzR/uKXiaoho/t
      aqa50ixPs4+p6hXuzd0hFkjgl/0Ylk62ksW0DUJqmIXyPHdmbhFQd9b6fJXZ4gxPFh9SM2r8
      NPsjyVAKVVYxLJ2l8iK2YxFUg8wUpvlp9jYhNXyELX0/7LFTvMa3k79HlVRqRg1JkLBdm0I9
      R2uwlYpW5sXyMwJKgCfZRziOje3aPM0+AsB2bG5NfYsoNNOMZ4pTBJRgU0zKcQiqQbQ1aT8X
      l5JWwrKbv8J/8/Q/YNgGfzf81xi2we3pH3BdF81qsFzNIgoSmtlAEAQc12Fspbm74b2521iO
      RUgNY1g6CLBUWaRmHM89bi3bpGE2cF0XwzaYyo+TDKcwbIOAEkASZcClplc39vXdL8YmjVLT
      sZjIjXGl8xNM2ySgBJFEGcd1m2M1x0I7QNlHQWsoTHe85a3L8ckvL/s9B8Gmbb7UxlkbsBYb
      BZ4vPd1QRXv14tos97euhbP+enXTZNer59U3PV8/b/3v5j7qy4k3Nu4263Vb7z6si1att+Gg
      XGi7hCxJPFp4sOMxyVAaQWBLt+CfDPwJTxYf7iiOK4oipUZpYyJxLyp6eYu2kI7OH8ZezqG8
      uoprP8sh13k1qFGyDf5x/Lcbz6cLW1Xm3vePSFXXyNWrex+4B1H/y8Veb5QN6rjOvgRYjyuy
      qDCUuczw0lN+dvqXa1IkdVpDKbLlBTpj3dTNGoulBYYylzEdk9+N/pp0uJ2OWBdzxRmudH7C
      8NIz4oE4Fb1CVa/QGe+mLZJBMxsslOdoj3Ywujy8sZzxuJIIBumIHk6m5m4Ylk3dMPY+cA9i
      /sD+UyFOIhviuNnHXOv6jIfz9/jzC39BrraKgECutkLYH0UQBB4u3NtQaFgXx12pLmO7Ntny
      AqlwGkmUEQUJRVI3xHEFQSARaMGvHP+lp5ppUtGPfgVhzH84n9W+UyFOMnWjtjYuKeLiMpmf
      IO6Po1saEX8UVVKxHQvTNrd0z2pGbaOrZ7k2MX+cVDjNnZkfqa/pgw5lLjNdmEISJWRR3aUW
      zUjcjd6vuDPz42thUFmUifiihH0RZovTB25j1B/jauen3Jm59VoY1Cf78Ml+Yv74nmU33pED
      HMXWUZ4D7MB63Ht05UXz+ab5gblX+t2bNT7XY/FlvZn097uxX286rtnnXpcXmSvO7FmP/uQg
      sUCc08l+Ir4IC6V5DNugJdjKdH6CtmiGT7s+5+HCfWRRJqAEeTB/d1+D4XPpC4TUMIOpc4TU
      EMvVZcpakfZoB/OlOVqCrVzv/ZKfZu8QUkPIksK92dtbxnXHHS8V4gNnPQyqmRpPso+om3UU
      ScGv+JuqdYK4oQxXbBRwXBtV2v2uss56GNS0DR4tPsCwdSRRxif7kUUJx7EZXRnh+dITCo0C
      ruug7LPs44LnAB84jmNhWAaa1UA3NWpGlf7kIO2RTHOHGEunbtS5lLmCKqkoa//3g+VYmI5J
      3axjWDpVvcK5tgukwqm1SUEDw9Y53zaEIimokg9FUo64xe8Wrwv0gVPSSltFqSyNfxj5242n
      r0bjRlaG9132qzlT+XqO342+7LLlWN3S/x/m6b7LPi54dwCPE43nAB4nGs8BPE403hjA463p
      a2lFlY9eVrItEiXs8x1qOZ4DeLw1p+Mt9IR238n+TZFlGcvalB4ejh1KeevlbOsAYV8Y6QQK
      xQaUAGHf0XyRH0o9DrtsAfjr//D/8tOPtw6tzM1cunqVxw92Tkh82/K2dYD/6V/+r4dm8Ljx
      X/Pfve8qAEdbjw+ljR8C2zrAs8KDfa3VfdfE1AQlY/sNKo67XZ/kR0BAs98s5/5t6vg2515M
      XHuj8z4UtnWA38z/DYbz/pcGvspg7CIjpXc/GfMu7Lb4Us1MU/3Nlhy+TR3f5txz8ctvdN6H
      ghcG9TjReA7gcaLZ1QFc12X2yQK5ud37h+XVt1+mdlAc22H0x0nqpZ37zK7rHnrdHMdh7PYU
      teLuO+i8j8/E4+DsOg+wOpPnwd895fO/vEJ+vgi4aDUDx3Jo708xdnuKtjMpFl5kUXwKnefb
      CcWD76Tioz9OMvdskUQmRq1QJxgLsDSxQqwtSjAWYPzuNP2fn2LypxmUgMLZr04jHcJkzfid
      aaYezBJri1AvNQhE/CxP5Ygmw4RbQ4zdnuLMZ71M3ptBDSgMXO9DVr3plg+VXb+ZeHuMU1e7
      kVWZiZ+mOfPFKYa/HcMybKrFOnrDRPbJ6HWDnqFOZp8ucu7mmXdS8WRPC/6Qj0K2hOu4NKoa
      8y+WGP5unO6hDqLJcFNFoqbTPdTB/PMsPZc639puqrcFSZEor1SxDItQIsj880Wer1TpvdJF
      uCUELujrdoez9F72lN4+VHZ1AEEAQRQQRIHey10ICLSfSdF7uWvj4hr5fpxQPEgg6kdS3t2Q
      Yr1eiirT3p8iO75K37VuoskwgiRSzdWYvDdDrC2CP+yjmj8cRQNBaNoVJZGOs22sTOU4dbWb
      aDqCJInUinXGf5ommmraraweTzmWk8KuDiBKIp3n2glG/bgu+EIqlVyV+RdZui92sDS+wpnP
      ehEEAVEWaet7d+JToXgQNaCC66L4FHqGOhi7M4VjO8TboqzO5Bm43ode11EDCi1diUOxG4j6
      SSnNrpTiV+i6kGH87jSO7dDSGWd5YpWBG33oNQPVr9DafTh2PY6GPR0gkdmae9F9sWPj8cVf
      nN3yXjT17pTDfEEVX3DryqfBG6c3Hl/6p+cA8IebSU/hQ+qHqwG16XibGLje99Lur86v2fUf
      qt2TSiye4NLVq4dWXjC09Rr1vh2PD5pSsXCouUC/+OM/2eJQR+oAruvSKGsEYwFc16VWqDcH
      iR4e74ncyvIWh9p11NooN7Atm3qpgdEwmXkyj1430OsG0w/nqKxWaVQ0Zp8u0Kho/PZ//47s
      +Aq1Qp2ph3NYhs343WmmH83h2A5jd6ZwXZf54SyVXI1GucH0wzksw9skz+P9sOsdoJyr4SxX
      WJ3J49gOpmaxOLKMP+wjM5Bm8sEstWIdURSprFYJRP1EU2HKyxVys3lqhTqmbhGIBnjx/QQA
      s08WyI6t8OL7cVo64kTTESzD9mLlHu+FXa+6VE8LP/3HR7R0JShmS/QMdSCrMnPPFwm3hHBH
      l3Edl/4bp1D8CtrtSfxhHyPfT9Den2Z5YpVg1E+kNcTKVFM8ql7WaO9PEYh2owZUlqdWWZ5a
      pWfo7WP0Hu+Hru4ejCNShose0u7wO7FnFKh9IE2qt4W200km7s2QGUiT7G5h+NsxZFVm8MZp
      5oez9F3rITPQxsyjeVJ9rVRWqnSca6NR0Rm7PcXZL09TXCrT0hln+LvxpqqzC1pFp/tC5kgb
      6XG0zM3OHOpAdTOHGQHajj37HZvDnpfXQnyLo8vIPpkzn/USigdJ9jQ12yOtmwa4WyOkAKT7
      mpspD/3y5ZupU61vVHEPjzchFA6T6XzZ23ijjndmIE1mIH1olfLweFfYtoOhv9Q29UaeHicK
      rVEnt7qy8dxzAI8PGp/PTzJ9eL0NWdmqbbqtAwzELmA6H54EdtLf9l6WRCqiymDs4pHaiChR
      pirjR2rjOCKIArJ8eL/TgiBseb5tyaOlZx/kmuD3hekY72xNsMdWtEaD7MLCoZWXeuVucqy6
      QKroO/Jf4u1I+dvfy53H4+g5Vg5gOLp3IXq8Fa2p9MGS4bSqhihLqP6dN0awDOvEpDLYls3o
      j5N0X+zYdflnYaFIouPod070OBgHSobT6wa3/v19yisVTN3C1K1mMlxNx3Vc6qUGlmE1F6ev
      Jc597IzfnWbm8QKV1Rrzw1nKq1VGbk2wOLJEtVDj0a+fUyvWmbg3y+PfDKM3PrxggsdLdv3Z
      Xk9mK69UefHtOKc/62V+eBGjYZEZTLMylaP3che1Qp3ph3OIssTZL0/vVuSxp60vieJXqBXr
      CIKAbZVYGl9h/O40p652E0oE1yINLj2XOsmOLntrgj9gdnWAaCpMZiBNLBUhnAgiyhJaRSfd
      lyTZncBsmBQWioRbQvR/cYrJB7O7FfdRISkSbaeT5OeKdF3oINYWQVIk6oU6k/dmCMWDKH4Z
      vMjOB83ui+JFgUR7FF9IxXVcgvEgsbYohmZi6hb1coPWrgSyKiOIItHk+1dWPmqC8SBKQEFA
      QA0odJxrY+7pInrNINYWoZKvMfDlaYyGiS+oku77+HOdZFlCUY9m90hZVg617FfLE1zXfW3/
      4f/5yf/4Qc4DeNqgO/O+tEH/zdD/gCIe350jT0boxuNIqU9nMVbLex+4D5REGLPw5qp6UtCH
      azs4urmv4498TTA0p583P/bYnr5IP63+N5OW6Qh2v7Hd5rnNgftBEREo3HpG4fb+t2fdjeiV
      M5QfvnlKiL8ziaObGKulvQ/mkB1g6sEsp65u/SJGfpjg7FdNtbiHf/+Mq3/67mdyjwuTlbE3
      7gK9TRctW58nIAdZahw85eDPuv/lG9v9ENjVAWafLBBqCbI4skwwFqCYLRGI+rFNh0ZFQ1al
      NdW1OvH2KM9+P4LruqhBlezoMq3dCYrZMnf/4yNaO5uTQvn5ItOP5nAdFzWgYGgmZ788Qyjx
      bjRFPTw2s+tEWPtgmtknC0iyyOJIc1dxf8iHIAhc+ePzSIrE3LNFZFUimgzTc7mTU1e714R0
      BfJzReLtUT7586ENNeX54Sy2aROI+mkfSCPJEvXym+2K4uHxtuzqAIoqb2hgnv6sF8dxkRSJ
      QNTPo18/x9ItTl3txt30+tT9WVS/gqSIRJJhbNPm3v/3hK6LHURTEU5/2tM8XpaolxrYloOs
      nLwN+Tw+DPYcA6xLDEZTEdrPNAdo04/mEESBrvOZLWt6W/fQ34y3RQH4/K9eJiN5ahAe75M3
      GgT3Xu7ypvc9Pgq8LZI8TjSeA3icaLw1wfvAWxO8O4HuNPY+Z173Qo68fTg8cq4Hs7L7Hm4b
      9rZ78UNdEyyLCpngux97BKQgTwv3j9TGcV4T3JhdfqvZ280kf3mN6JU332ZLbYlSfjzxfmaC
      jxrHdaialXduV3eORvfS43WMfPmtUyEOwjFzAJuKuT/PPkx023OAjxVvEOxxovEcwONEc6y6
      QB87b5MO/TYE5TCL9ZOznHUzngN8QLxNOvTbEFXiBOSTmY3rdYE8TjTeHcDjrZFCfpTE4ewR
      LSpvf0m+9USYh8dBEP3qoczgAvjScW8izON4YebKNGYOZ+yiJCLvdCLMGwN4nGg8B/A40XgO
      4HGi8RzA40TjOYDHicZzAI8TzbZhUFEQP8jFGcLav4/RroCAKLyf9jW/77f4zgWh+f8QEN62
      rPXz91nGturQHh4nhf8flkmBHq2PvHMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story - Instacart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29aYwkaXqY98SRkUfkfdZd1df0dE/PzB6znKW1h0TukrOmKdIidEEgRZGU
      YBqkaNn+wR+CsQZsQiAM/5AoASIMGjANkJRE7grkrmWR9JLLvajR7O5M9/TdXV1n3vcRGRmX
      f2RVdXVXZWVWZVZVd1U8fyozvi/e+DIq3viu9xAcx3FwcTmniKfdABeX08RVAJdzjasALuca
      VwFczjV7FcCxeXDnFvcfrTLp2fH6xsaEJbq4jMceBfi3/9dvspyrsnr/fe48zvLNr/w27y3X
      JnKxP/jSl4fWyd3+Jv/uT98b6zpf+e1/zoSa7HLGkZ8/YBo9dNPhcz/8BfyKya/9q+/Qu1XF
      fOcdtI0PuLVcoN3q8Au/9Cv87m/9CxLhELOXX+U/f7DMP/nFn+Ff/8a/4Gf/21/Ge8Dg6n/6
      1V/h8rWPcvtRlv/1f/7v+Ze//r/jjcb42F/5PA//4s/5y5UeQdnk2pTCf/izdynksvz8f/er
      3P7zL3FnrcLi1Tf4+IUof/gn36Scz/H3fvF/5D/+3v9JcjpKKDLF177zPreqv8k777zDm68s
      HOf9c3nJ2aMAf/fnf4mb732b3/jffo0f/pu/wGf/2ifxXf9xPn4hyj//+v/LP/7lXyZ7+xv8
      xbu30Rp1fvTnfomYqvDog+9RqReRwtNbD7/J7/zWbxG79CbvfPbtZ66RnL/Cz/z9n+U3f+Nf
      YggiHlnEFjxMZ5LMf/azeLI+3vnsx2mUs4QCCiWjyfJGlQ+f5PmVf/wrALRqBaKqj7qt8Wi1
      AEaLj37m73MhFaKXvc31H/9HXIiexC10eZnZowAf3vyAK2+8jZ8O7z5e57LipV6vY1khREun
      2upy69Zd0q9/gY1IgpiqAPBf/ein+LUv/jo/+z/80x3Rf/fn/tHwFpgmX/hbP0tKNfg//s2X
      +enPX9+6nsXv/c7v8BM//d9w84/Nft2eRrXVxel1+Pe/9zv8yN/+eRa+9WU0AE+I6VQIAMWr
      9GWEgkiSNIHb5HJWkb74xS9+cfeBZjnHV77yFZpinP/6nU8zPbvAu3/2VQxPlM99+i3+8Et/
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
